/*******************************************************************************
********************************************************************************
----------------------------------------------------------------------------------
v4.1   110805      手动停机显示3OFF,增加Ascii码发送指令，与Hex格式兼容
v4.2   110813      增加断电短信报警，GSM模块掉线检测,下载波特率可选择115200/9600
                   降低主频至8M
v4.3   110906      增加电池掉电保护，增加参数存放位置可选择（eeprom/flash）
                   湿度调低3%RH,湿度曲线+30
v4.5   110915      湿度曲线不调低,GSM模块无时不显示信号
v4.6   110929      添加恢复出厂设置指令
v4.7   111123      增加GSM U0接收时间
v4.8   111127      co2,trsf,等高耗电源，增加省电模式, 
                   HLT07-1.2板因为78L05电流太小，去掉保险丝，直接由USB口充电
v4.9   111201      修正21没有报警喇叭,添加采样错误重复次数
v5.0   111207      增加数字滤波
v5.1   111217      修正平均值计算，和mum改为有符号型long
                   由于上位机软件2位小数版本，所有通道全部2位小数显示
                   增加光照2位小数时，温湿度实际2位小数，显示时1位小数
                   增加打印功能，最多可打印8个通道
v5.2   111227      手机号码存放地址从FLASH改到EE
--------------------------------------------------------------------------------
v5.3   120107      短信格式：1温-12.5超(CR)
v5.5   120206      增加EE操作延时,修改下载包最大数为400
v5.6   120212      换不同的SIM卡后，短信接收提示变了，现改为模块自动重启设置后正常。
v5.8   120409      lcd08显屏时间改为3分钟,
                   增加持续报警时间控制,按钮开报警,重启或复位时都可重置
                   上位机软件>_U_none无法识别，会报错，上位机需改进。
                   link的时候，以下全发送为_U_none
v5.9  120416       增加省电模式下滤波。光照曲线恢复正常
v6.0  120418       修正喇叭不显示问题
v6.1  120425       修正省电模式下滤波
v6.2  120509       修正1，2路显示没有负号的问题，多路不存在这个问题
v6.3  120516       修正湿度错误时continue
v6.4  120529       修正照度大于100K时显示, 土壤null AD值调到5
v6.5  120612       定时发送时，手机号码错误时，不开机，设置时间参数时或复位或重启时，pt清0
v6.6  120703       修正rtc.c 6月和7月对调问题
v6.7  120725       兼容MG323，MG323设置为 AT+CNMI=1,2,0,0,0 模式时，短信还是会存储在SIM卡
                   当存储的短信数量达到一定数时，就再也接收不到短信了？？？
v6.8  120809       初始化和收到短信处理完后删除所有短信 AT+CMGD=1,4
                   连接和报警设置时，响应速度加快
v6.9  120827       RecordPt由vu16改为vu32,记录间隔大于65535时ok
                   电池供电短信主动发送时，SIM没插或没信号或短信发送失败，停止发送
v7.0  120907       湿度统一调低3%RH
v7.1  121108       GPRS只支持MG323
v7.2  121130       MG323修改为先RST再IGT
--------------------------------------------------------------------------------
v7.4  130117       增加短信设置命令 设置上下限和手机号码
                   没有NULL,用0代替的型号：
                   模拟型号：光照 
                   所有土壤水分型号 
v7.5  1303025      GPRS支持上电断电触发,MG323接收到短信并且回应成功后才删除所有短信。
v7.6  130409       PDU模式只能在中国适用，国外需用TXT模式
v7.8  130410       模块初始化时，先检测确定有短信存储在SIM卡位置10中，才清空SIM卡中短信
                   接收到短信，不管指令是否正确，都进行SIM中10位置短信查询，确定是否清空短信
v7.9  130506       GSM模块 EM310与MG323都可用
                   手机号码设置，改为11位数
v8.0  130517       省电模式时，电源关闭修正
v8.1  130607       修正手机号码>1时出错
v8.2  130609       通道参数和曲线参数放置在同一个FLASH页
v8.3  130730       变送器屏蔽手动开关机
      130828       打印缓冲区格式 时间从占2个字节改为占3个字节
v8.4  130913       变送器、显示计，最大最小平均只保留1天时间
v8.5  130924       取消EM310, GPRS,发送缓冲取消，直接从EE取数据,增加按钮开关模块功能
v8.6  131019       设置StateB时，型号和序列号不能设置,去掉电池低压保护功能
v8.7  131109       GPRS手动关机时，连接修正为停机状态,设置GPRS参数时，不清空
v8.8  131115       NTC温度曲线校准，无C
v8.9  131121       GPRS仪器，去除断电短信报警
v9.0  131205       湿度曲线调整到30,支持温度补偿，打印支持多通道，GPRS支持基站定位，支持短信标题可添加，变送器支持超标时变频2分钟记录
--------------------------------------------------------------------------------
v9.1  140214       GPRS打印，支持打印数据下载，设置GPRS参数时不清空数据
                   GPRS缓冲区最大空间=40*(17+2*8)=1320 字节 <= 1500
                   打印缓冲区最大空间 <= 4+PRINT_NEW_CAP*(4+2*CH_NUM)
                   其他仪器参数 <= 360
                   占据总空间 1500+360+  4+PRINT_NEW_CAP*(4+2*CH_NUM) <=65536
                   计算公式： PRINT_NEW_CAP*(4+2*CH_NUM)<=63672 
                   CH_NUM=8时，PRINT_NEW_CAP<=3183 ， 最大3000
                   CH_NUM=4时，PRINT_NEW_CAP<=5306 ， 最大5000
                   CH_NUM=2时，PRINT_NEW_CAP<=7959 ， 最大7000
                   CH_NUM=1时，PRINT_NEW_CAP<=10612 ，最大10000


                   //最大计算，通道数8，打印3000：
                   (GPRS)1320 + 空 + (参数)360 + (打印)60004=65536
                   --->空=3852

                   //顺丰协议修改为
                   (记录数据)+ 空 + (参数)360+（开机标记，关机标记，电量低关机标记）15=65536
                   GPRS数据和打印记录的数据放在一起。
                   （带定位）  每条记录 BB=  RTC(4)+BAT(1)+GPS(8)+2*CH_NUM  =13+2N，容量=65161/(13+2N)
                   （不带定位）每条记录 BB=  RTC(4)+BAT(1)+2*CH_NUM  =5+2N，容量=65161/(5+2N)

                   通道数不同，续传容量也会不同
                   带定位：
                   CH_NUM=8时，容量=2246
                   CH_NUM=6时，容量=2606
                   CH_NUM=4时，容量=3102
                   CH_NUM=2时，容量=3833
                   CH_NUM=1时，容量=4344

                   不带定位：
                   CH_NUM=8时，容量=3102
                   CH_NUM=6时，容量=3833
                   CH_NUM=4时，容量=5012
                   CH_NUM=2时，容量=7240
                   CH_NUM=1时，容量=9308


v9.2  140225       GPRS增加编号设置
v9.3  140305       短信断电报警，只有在报警开时有效
v9.4  140319       省电模式：初始化、GPRS发送、短信发送失败、或发送成功空闲状态下,模块进入休眠，灯不亮，等待下次发送数据时唤醒，灯亮
v9.5  140417       滤波变为以中值滤波为主,这个版本出现了采样进不去的问题
v9.7  140624       采样进不去的问题
v9.8  1407         GSP要求，超标变频2分钟(不管报警开关)
v9.9  140710       增加485发送数据前延时10ms, 增加读实时数据0x0B，用于短信报警器
v100  1408         zz2.4以上可以读取版本，修正短信报警间隔错误问题，增加开机自动对时，对时失败则最多重复3次对时
v101  140911       修正打印1000条时乱码的问题,SIM卡检测失败，则停止对时
v102  141024       CREG 3 注册失败，退出对时
v103  141106       兼容MG301
                   MG301 BUG: 接收到短信，直接发送到TE, MG301的BUG, 无法设置到模块，过一段时间，CNMI，自动变回到+CNMI: 3,0,0,1,0，
                   导致无法再收到短信，解决办法：平时空闲时，一直设置AT+CNMI=3,2,0,1,0 ,GPRS仪器暂不支持
                   新模块第一次使用时，待上电灯闪后，按报警开关设置波特率9600
v104  141229       湿度在40、60等调到0，80是30+
--------------------------------------------------------------------------------
v105  150307       MG301,启动增强
v106  150311       AdcToValue 中 u32 改成 ulonglong ， 防止溢出
v107  150428       无线变送器，增加频率设置功能，长按第四键，直到出现'上限超标‘，进入设置状态，再次长按'上限超标'消失，进入正常通讯状态
v108  150619       记录仪补充记录数据，增加每次记录时，记录仪时间与RTC时间，比对如果偏慢，以最多每次5条的速度补数据
                   固件版本开始带【S】
v109  150722       模块未启动时，对时标志也会清0
v110  150915       复位后打印的数据不再清空，107-109有这个问题
v112  151106       GPRS省电模式下，修正对时没完成时进入睡眠时无法再启动的问题 GsmToPowOff
v113  151106       ADC采样保持时间加大，采样次数140, MG301网络对时启用NWTIME,可加快对时
v114  151219       增加SIM800C+SIM68MB
-----------------------------------------------------------------------------------------
v115  160107       修正rtc算法在闰年时间不对的问题-必须修正==============================
v116  160121       GPRS上电复位时不对时，只在按钮开机才对时
v117  160216       GPRS发送数据后关闭连接修正
v118  160305       CSQ信号，1-31才OK进入下一步
                   无线卡片接收机，进入透传模式：(暂不开放)
                   1.多机接收中继器和GPRS-RF：关机80FF时进入，开机后退出
                   2.记录仪：按第一个键显示12进入透传
                   3.变送器：按第四个键显示12进入透传
v119  160413       新的一批EE反应速度过慢，需驱动延时增加至32
                   关机60FF或70FF时，GPRS数据清空
v120  160418       GPRS关机时MCU-TXD低电平，字符串SISM分成SI和SM单独判断，
                   GPRS、变送器记录时间判断延长至0-15s
                   GPRS TCP包增加结束符 0x1A
v121  160512       GSM点火升级
                   固件版本号说明： S11、S12、S21
                   S 表示可升级  
                   1表示 MG323或MG301模块  2表示 SIM800C
                   0表示路格原协议，1表示顺丰协议，2表示哲勤协议

v122  160527       GPRS,ATE 与前一步的断开连接稍作时间延迟，防止OK影响到ATE判断
v123  160530       栈设置到1200，实际要根据map信息确定
                   无线卡片增加 zz AD曲线调整，zz <-> 主机 <-> 卡片
                   卡片对指令地址不检测，故每次调整时，必须确保只有1台卡片处于HHHH状态
                    GPRS一个包字节数 size= m(17+2n)+3n+28
                    n=1时，size=19m+31
                    n=8时，size=33m+52
                    m=(size-(3n+28))/(17+2n)
                    采样刷新时间10s,如果记录间隔<10s, 则采样时间自动变为2s
                    中断中U0和U1中断要优先响应，防止数据通讯丢失数据
                    430中断机制，在进入某一个中断后，总中断会自动关闭，不会再响应其他中断，
                    故，只需在其他中断后，开启总中断，而在U0和U1中不开，这样就会继续响应U0和U1中断
                    暂时先在TA和TB中断中增加_EINT()
                    超时时间暂定30s
                    EE 指令只发1次，不再重发
                    重启3次都初始化失败，则信号显示0
                    串口监测，第二键不清标记，其他键清0
                    变送器，GPRS，实时采集间隔从2秒变到5秒

v124  160629        修正变送器设置记录间隔时保存至EE
v125  160701        回文校验 单条补传，先设置到40 
v126  160705        打印每包延时2秒，每包最多60字节
v127  160721        FW 上电复位时，带RF数据保护
v128  160824        FW同步时频率后从EE重新取频率后才显示；
                    G95-4PS 定位指示：收到正常经纬度数据5秒闪1次。收到无效的指令5秒闪2次
v129  160911        WIFI 增加300.10+RTC 服务器时钟对时功能
                    
*******************************************************************************/
//中断中和普通函数中共同使用的变量，要定义为volatile
//注意：传感器信号为电压信号0~v时,不显示NULL********************************************//
//宏定义里的数值默认是int型，最好在前面加u16

#ifndef __CONFIG_H
#define __CONFIG_H
//..............................................................................
#include "msp430x24x.h"
//..............................................................................
#define CPU_F  8000000
//在 #define CPU_F ((double)8000000) 语句里 8000000 修改成你当前MSP430 CPU的主频频率，即CPU的MCLK。
//IAR MSP430自带精确延时函数

#define delay_us(x) __delay_cycles((long)((double)CPU_F*(double)x/1000000.0))
#define delay_ms(x) __delay_cycles((long)((double)CPU_F*(double)x/1000.0))


#if   CPU_F==1000000
  #define FLASH_CLK_INIT   FCTL2=FWKEY+FSSEL0+FN1// MCLK/3=333(257-476KHz)
#elif CPU_F==8000000
  #define FLASH_CLK_INIT   FCTL2=FWKEY+FSSEL0+FN0+FN1+FN4// MCLK/20=400(257-476KHz)
#elif CPU_F==16000000
  #define FLASH_CLK_INIT   FCTL2=FWKEY+FSSEL0+FN0+FN1+FN2+FN5// MCLK/40=400(257-476KHz)
#endif
//.................................................................................
#define TA1_DELAY          100//70// 100->3ms
#define TA1_START          TACCTL1=CCIE;TACCR1=TAR+TA1_DELAY;TACTL=TASSEL_1+MC_2
#define TA1_STOP           TACCTL1&=~CCIE
#define TA1_CLR            TACCR1+=TA1_DELAY

#define TA2_DELAY          100//70//160 
#define TA2_START          TACCTL2=CCIE;TACCR2=TAR+TA2_DELAY;TACTL=TASSEL_1+MC_2
#define TA2_STOP           TACCTL2&=~CCIE
#define TA2_CLR            TACCR2+=TA2_DELAY

#define TIME_U0_START      TA1_START//>2ms
#define TIME_U0_STOP       TA1_STOP
#define TIME_U0_CLR        TA1_CLR

#define TIME_U1_START      TA2_START
#define TIME_U1_STOP       TA2_STOP
#define TIME_U1_CLR        TA2_CLR

//ADC
#define TB0_DELAY          327//10ms
#define TB0_START          TBCCTL0=CCIE;TBCCR0=TBR+TB0_DELAY
#define TB0_STOP           TBCCTL0&=~CCIE

#define TB1_DELAY          32767//31200//32767//系统Loop循环时间
#define TB1_START          TBCCTL1=CCIE;TBCCR1=TBR+TB1_DELAY;TBCTL=TBSSEL_1+MC_2
#define TB1_STOP           TBCCTL1&=~CCIE

#define TB2_DELAY          32//327//按键消抖时间
#define TB2_START          TBCCTL2=CCIE;TBCCR2=TBR+TB2_DELAY;TBCTL=TBSSEL_1+MC_2
#define TB2_STOP           TBCCTL2&=~CCIE

#define TB3_DELAY          16381//0.5s
#define TB3_START          TBCCTL3=CCIE;TBCCR3=TBR+TB3_DELAY;TBCTL=TBSSEL_1+MC_2
#define TB3_STOP           TBCCTL3&=~CCIE

#define TB4_DELAY          100//LED
#define TB4_START          TBCCTL4=CCIE;TBCCR4=TBR+TB4_DELAY;TBCTL=TBSSEL_1+MC_2
#define TB4_STOP           TBCCTL4&=~CCIE

#define TB4_PMW_DELAY      32//1ms
#define TB4_PWM_START      TBCCTL4=CCIE;TBCCR4=TBR+TB4_PMW_DELAY;TBCTL=TBSSEL_1+MC_2
#define TB4_PWM_STOP       TBCCTL4&=~CCIE

#define TB4_RTD_DELAY      2300//70ms， max31865转换，必须要等70ms
#define TB4_RTD_START      TBCCTL4=CCIE;TBCCR4=TBR+TB4_RTD_DELAY;TBCTL=TBSSEL_1+MC_2
#define TB4_RTD_STOP       TBCCTL4&=~CCIE

#define TB5_DELAY          8192//0.25s
#define TB5_START          TBCCTL5=CCIE;TBCCR5=TBR+TB5_DELAY;TBCTL=TBSSEL_1+MC_2
#define TB5_STOP           TBCCTL5&=~CCIE

#define TIME_KEY_START     TB2_START
#define TIME_KEY_STOP      TB2_STOP

//-------------------------------------------------------------------------------
//规则：(系列(1)+型号(2))+通道数(1)
//温度系列......................................................................
#define _1_NTC                         1011
#define _2_NTC                         1022
#define _3_NTC                         1033
#define _4_NTC                         1044
#define _5_NTC                         1055
#define _6_NTC                         1066
#define _7_NTC                         1077
#define _8_NTC                         1088

#define _1_NTC_F20_120                 1091
#define _2_NTC_F20_120                 1102

#define _1_PT_0_300                    1111
#define _2_PT_0_300                    1122
#define _3_PT_0_300                    1133
#define _4_PT_0_300                    1144
#define _1_PT_F100_200                 1151
#define _2_PT_F100_200                 1162
#define _3_PT_F100_200                 1173
#define _4_PT_F100_200                 1184
#define _4_PT_F50_300                  1194
#define _4_PT_F40_100                  1204
#define _1_PT_F40_100                  1211
#define _1_PT_F40_250                  1221
#define _1_PT_F200_100                 1231
#define _2_PT_F200_100                 1242
#define _1_PT_F20_120                  1241
#define _1_PT_0_200                    1251
#define _2_PT_F40_100                  1262
#define _3_PT_F50_250                  1273
#define _3_PT_F50_300                  1283
#define _1_PT_F50_300                  1291
#define _4_PT_F150_150                 1304
#define _2_PT_F50_250                  1312
#define _3_PT_F200_100                 1323
#define _4_PT_F50_250                  1334
#define _4_PT_F50_150                  1344
#define _4_PT_F200_100                 1354
#define _4_PT_F50_200                  1364

#define _5_4PT_0_300_1NTC              1385
#define _5_4PT_F100_200_1NTC           1395

#define _1_PT_F200_50                  1411//负100以上无小数点
#define _2_PT_F50_350                  1422
#define _11_PT_F80_60                  1431
#define _21_PT_F80_60                  1442
#define _11_PT_F200_0                  1451//-200时LCD为整数显示

//RTD, MAX31865  现程序最大支持300，如超过300，需修改程序 max31865_temp
//RTD, 滤波6-2，【采样间隔是5s,与普通的不一样】,节省功耗
//max31865,操作流程，开电源10ms，开始转换，70ms后，读出温度
//max31685, 功耗较大，HT7133电流不够，故需采用HT7530
#define _1_RTD_F200_300                1501//max31865 PT100
#define _4_RTD_F200_300                1514


#define _2RF_F200                      1522//2路RTD无线，本身无采集
#define _5RF_F200                      1535//5路RTD无线，本身无采集
#define _8RF_6NTC_2F200                1548//6路
#define _2RF_1NTC_1F200                1552
#define _3RF_2NTC_1F200                1563



//18B20滤波设置为0//10-4  POWER_TIME_ENABLE=1, 省电模式时，记录一次，采样一次
#define DS18B20_SLP_EN                 0//记录仪省电模式，如果对功耗无要求可以不用开启        

#define _1_DS18B20_F55_125             1601
#define _2_DS18B20_F55_125             1612
#define _3_DS18B20_F55_125             1623
#define _4_DS18B20_F55_125             1634
#define _6_DS18B20_F55_125             1646
#define _8_DS18B20_F55_125             1658

#define _4_WD420mA_0_400               1714//4-20mA
#define _4_WD420mA_0_800               1724
#define _1_WD420mA_0_800               1731


//滤波30
#define _1_K_F200_1350                 1811//MAX31855K,数字热电偶
#define _2_K_F200_1350_COLD            1822//同时显示冷端数值
#define _2_K_F200_1350_DS_F55_125      1832//MAX13855+DS18B20
#define _3_K_F200_1350                 1843

//温湿度系列.....................................................................
//HIH5030-------------------------------------
#define _20_SHT                        2002
#define _20_NTC_SHT                    2012

#define _2_NTC_HIH5030                 2022
#define _3_2NTC_1HIH                   2033
#define _4_3NTC_1HIH                   2044
#define _4_1NTC_1HIH_2NTC              2054
#define _4_2NTC_2HIH5030               2064//2路NTC,2路HIH5030,显示时温湿度同一通道号
#define _5_4NTC_1HIH                   2075
#define _6_4NTC_2HIH5030               2086//4路NTC,2路HIH5030
#define _6_5NTC_1HIH                   2096
#define _6_3NTC_3HIH5030               2106
#define _6_1NTC_1HIH_4NTC              2116
#define _7_6NTC_1HIH                   2127
#define _8_4NTC_4HIH5030               2138//4路NTC,4路HIH5030,显示时温湿度同一通道号
#define _8_6NTC_2HIH                   2148
#define _8_5NTC_3HIH                   2158
#define _8_3NTC_3HIH_2NTC              2168
#define _8_5NTC_HIH_NTC_HIH            2178

#define _1_HIH5030                     2301
#define _2_HIH5030                     2312
#define _6_HIH5030                     2326
#define _8_HIH5030                     2338

#define _2_1PT_F50_250_1HIH            2402
#define _2_1PT_0_300_1HIH              2412
#define _2_1PT_F100_200_1HIH           2422
#define _3_1NTC_1HIH_1PT_F40_100       2433
#define _3_2PT_0_300_1HIH              2443
#define _4_2PTH_2HIH                   2454
#define _4_2PT_F50_100_2HIH            2464
#define _4_2PT_F50_250_2HIH            2474
#define _6_3PT_0_300_3HIH              2486
#define _6_1PT_F40_100_1HIH_2NTC_2HIH  2496
#define _8_4PT_0_300_4HIH              2508
#define _8_4PT_F40_100_4HIH            2518
#define _4_2PT_F50_200_2HIH            2524



#define _1_SD420mA_0_100               2601//4-20mA
#define _2_SD420mA_0_100               2612
#define _8_4WD_0_80_4SD_0_100          2628//4路温度4路湿度模拟量输入
#define _2_DS18B20_HIH                 2632
#define _7RF_1NTC_1HIH_5F200           2647//RF无线卡片传感器


//ROTYONIC-----------------------------------
#define _1_ROTYONIC                    2801//滤波10
#define _2_1PT_1ROTYONIC               2812//滤波10
#define _6_2PT_2ROTYONIC_NTC_HIH       2826//3路温湿度，滤波10
#define _8_4PT_4ROTYONIC               2838


//数字温湿度,其中SHT20和HTU20程序完全一样
//数字温湿度   HIH6130
#define _2_WDHTU_SDHTU                 2902
#define _2_WDHIH6130_SDHIH6130         2912


//4-20mA
#define _3_WD_F10_60_SD_0_100_JDSD_0_200 2953


//土壤系列.滤波10，ADC_ERR_L=5......................................................................
#define _1_TRSF                        3011
#define _2_NTC_TRSF                    3022//SWR3按照实际AD值表计算
#define _3_2NTC_TRSF                   3033
#define _4_TRSF                        3044
#define _4_NTC_HIH_NTC_TRSF            3054
#define _4_2NTC_2TRSF                  3064
#define _6_3NTC_3TRSF                  3076//3路NTC,3路TRSF,显示时，温度水分同一通道号
#define _6_TRSF                        3086
#define _8_4NTC_4TRSF                  3098
#define _3_TRSF                        3103
#define _5_4NTC_TRSF                   3115
#define _5_1W1TRSF_1W1TRSF_1W          3125
#define _6_1W1TRSF_1W1TRSF_2W          3136
#define _2_TRSF                        3142
#define _8_4NTC_2HIH_2TRSF             3158
#define _6_1NTC_1HIH_2NTC_2TRSF        3166
#define _5_TRSF                        3175
#define _7_4NTC_2TRSF_1HIH             3187
#define _6_4NTC_1HIH_1TRSF             3196

//co2+滤波电阻330K................................................................
#define _2_O2_CO2                      4022//空气中 o2-20.95% -o2-A2-0.099mA  co2-0.03% 
#define _1_CO2_5000PPM                 4041//单位10ppm  COZIR-A
#define _1_CO2_2000PPM                 4051//单位10ppm
#define _2_CO2_2000_NTC                4062
#define _1_CO2_SOHATECH_3K             4071//传感器 SOHATECH
#define _2_CO2_5000PPM                 4082
#define _1_CO2_COZIR_W10V              4091//传感器 COZIR W10V  10%
#define _1_CO2_0_5                     4101//传感器 COZIR-A  5%  2位小数
#define _2_CO2_5000PPM_SD              4112
#define _2_CO2_5000PPM_O2              4122
#define _3_NTC_HIH_CO2_5000PPM         4133

//炜盛CO2系列，滤波50,  自动校准功能，必须持续供电，48小时一次校准，DCV_ALL_ON=1
//Z14  5V  out(0.4-2V)
#define _1_CO2_Z14_5000                4141
#define _2_CO2_Z14_5000                4152
#define _5_2NTC_2HIH_CO2_Z14_5000      4165//Z14
#define _7_3NTC_3HIH_CO2_Z14_5000      4177


//MH410D,预热时间3min,out 0.4-2v  0-5%
#define _1_CO2_MH410D_0_10             4181

//GSS MISIR  5V out(0,3v) AVCC
#define _1_CO2_MISIR_5000              4191
#define _5_2NTC_2HIH_CO2_MISIR_5000    4205
#define _7_3NTC_3HIH_CO2_MISIR_5000    4217


//敏勤MK400  (0.4-4V) 需电阻分压至 0.2-2v
#define _1_CO2_MK400_2000              4221

//co2 TTL数字传感器  滤波 0
#define _1_CO2_TTL_5000                4231//数字co2，设置 X 420, 可以手动调零，进入正常模式，显示数值后，按LOG，显示07，设置成功（需放在新鲜空气中）
#define _1_CO2_TTL_20BF                4241//TTL, 设置 X 42 ,同上，区别是这个20%-量程20 0000 ppm, 60 -> 0.06%  故 除10即 转为单位0.01%

#define _4_WD_SD_CO2TTL5000_GZ200K     4254//CO2  TTL数字信号
#define _5_WD_SD_WD_GZ200K_CO2TTL5000  4265//GPRS已经占用U0，CO2-TTL 需开启 RF_U1_EN =1，CO2电源模式已经去掉
#define _3_NTC_HIH_CO2TTL20BF          4273//GPRS已经占用U0，CO2-TTL 需开启 RF_U1_EN =1，CO2电源模式已经去掉
#define _7_WD_SD_WD_GZ200K_CO2TTL5000_2WD 4287//GPRS已经占用U0，CO2-TTL 需开启 RF_U1_EN =1，CO2电源模式已经去掉


//O2-滤波24------------------------------------------------------------------------------
#define _1_O2                          4301
#define _2_O2                          4312

//PM2.5  //PM2.5  整数格式   滤波30/8------------------------------------------------------------
#define _1_PM25_500                    4401//4-20mA
#define _3_PM25_500                    4413
#define _1_PM25_TTL_1000               4421//夏普PM2.5, 数字 TTL 波特率 2400
#define _1_PM25_V_1000                 4431//夏普PM2.5, 模拟 Vout, 电接1M下拉电阻
#define _2_PM25_TTL1000_PM25V_1000     4442//通道1 TTL  通道2 Vout
#define _2_PM25_TTL1000_CO2_MISIR_5000 4452
#define _1_PM25_PWM_1000               4461//韩国、PWM信号

//VOC 有机挥发气体化合物
#define _1_VOC_0_100                   4601//4-20mA

//甲醛、预热时间 15
#define _1_HCH2O_TTL_0_373             4701//量程3.73   mg/m3
#define _1_HCH2O_V_0_373               4711//0.4-2V


//气象系列（照度采用2位小数软件）....................................................
#define _1_GZ_100K                     5011//光照传感器BH1750(0-65KLX)+滤光镜
#define _1_GZ_200K                     5021
#define _1_GZ_65K                      5031
#define _3_WD_SD_GZ100K                5043
#define _3_WD_SD_GZ200K                5053
#define _6_WD_GZ100K_SD_YL01_FS_FX     5066
#define _6_WD_GZ100K_SD_YL05_FS_FX     5076
#define _2_WD_GZ100K                   5082
#define _8_WD_GZ100K_SD_YL01_TRWD_TRSF_FS_FX     5098
#define _8B_WD_GZ100K_SD_YL01_TRWD_TRSF_FS_FX    5108//变送器模式,全部是1位小数
#define _8B_WD_GZV200K_SD_YL01_TRWD_TRSF_FS_FX   5118//变送器模式,全部是1位小数
#define _1_GZV_200K                    5121//模拟照度，没有null,3off,用0代替
#define _4_WD_SD_CO2_5000_GZ200K       5134
#define _4_WD_GZ100K_SD_YL01           5144
#define _5_WD_GZ100K_TRWD_TRSF_SD      5155
#define _7_WD_GZ100K_TRWD_TRSF_SD_YL01_QY 5167 //温度、照度、土壤温度、土壤水分、湿度、雨量、气压
#define _2_WD_GZ200K                   5172
#define _1_GZ_100LX                    5181//1位小数
#define _1_GZ_1000LX                   5191//1位小数
#define _6B_WD_SD_QY_YL01_FS_FX        5206//变送器模式,全部是1位小数，变送器雨量清0，固定1天清一次0
#define _3B_WD_GZ100K_TRSF             5213

#define _4_WD_SD_WD_GZ200K             5224

#define _3_WD_TRSF_GZ200K              5233
#define _5_WD_TRSF_GZ200K_WD_SD        5245



//滤波10 风向单位x10, 所以 U_x10_ENABLE =1 
#define _6_WD_SD_QY_YL01_FS_FX         5256
#define _4_TRWD_TRSF_TYFS_ZF           5264//土壤温度，土壤水分，太阳辐射，蒸发，全部是DC5v 供电

#define _6_2NTC_2HIH_2GZ100K           5276


//水位.......水位+30滤波....需 AD_BIG_NULL_EN =1...............................................................
#define _1_SW_0_3000mm                 5301
#define _1_SW_0_500mm                  5311//4-20mA,,软件滤波,省电模式控制传感器电源
#define _1_SW_0_1000mm                 5321
#define _2_WD_SW_0_500mm               5332
#define _2_WD_SW_0_1000mm              5342
#define _1_SDU_200_10mm                5351//深度 省电+DCDC12 + 滤波15+ 刷屏LCD_X_TIME=30
#define _2_WD_SW_500_10mm              5362
#define _1_SW_500_10mm                 5371
#define _1_SW_0_50_m                   5381//2位小数
#define _2_WD_SW_0_3000mm              5392
#define _1_SW_200_10mm                 5401
#define _1_SW_1000_10mm                5411
#define _2_SW_30m_SHD_20m              5422//2位小数，水位30米，井口位置20米，20-SW，即井口至水面距离

//计数系列.......................................................................
#define _1_01YL                        5611
#define _1_02YL                        5621
#define _1_05YL                        5631
#define _1_CS                          5641
#define _3_NTC_HIH5030_01YL            5653//滤波10-4

//光合有效辐射..................................................................
#define _1_GH_400_10umol               5711//4-20mA,省电模式
#define _3_WD_SD_GH400_10umol          5723

//输入触发.....................................................................
#define _3_CF                          5803//3路漏醋，任一路输入触发短信提醒，没触发0.0，触发100.0,报警范围设定(0,50) 

//风速风向，单位x10,所以 U_x10_ENABLE =1.......................................................................
#define _2_FS_FX                       5902
#define _3_FS_FX_01YL                  5913

//电参数........................................................................
#define _1_DY_500_10mv                 6011

#define _3_DL_10A                      6023//2位小数
#define _3_DY_150v                     6033

//电阻，2位小数
#define _1_DZ_0_60_R                   6111

//紫外辐射，2位小数
#define _2_NTC_ZWFS                    6202

//库门开关
#define _1_DOOR                        6301//开关信号  开的时候报警
#define _1_SMOKE                       6311//烟感报警，常开，报警时闭合


//PH,2位小数,AD串联电阻焊330K,无滤波
#define _1_PH_0_14                     6401
#define _2_NTC_PH                      6412
#define _2_PT_F100_200_PH              6422
#define _3_PH_14                       6433

//省电+滤波  压力，气压
#define _1_YALI_160_10kpa              6501//上位机采用单位10kpa(传感器：4-20mA)
#define _1_YALI_400_kpa                6511
#define _3_YALI_400_kpa                6523
#define _1_YALI_F100_100_kpa           6531//-100,100   (4-20mA)
#define _2_YALI_160_10kpa_PTH          6542//+省电模式

#define _3_WD_SD_QY                    6553//大气压2位小数

//气压.压强.压力, 一个标准大气压=101.325 kpa =14.696 psi
#define _1_SHR_30_120_kpa              6561//SHR 数字信号, 2位小数，上行显示101.5 下行显示 .56

//====================================================================================
#define JLY_MODEL                _2_NTC_HIH5030
//-----------------------------------------------------------------------------------
//变送器、非GSP应用场合，超标变频2分钟记录,不必开启，比如气象、记录仪
#define GSP_ENABLE               1//变频要求，超标后，变频2分钟记录，(报警关时也这样)
#define GSP_BP_JIANGE            ((u16)60*2)
//-----------------------------------------------------------------------------------
#define CH_NUM                   (JLY_MODEL%10)//通道数
//------------------------------------------------------------------------------------
#define P_VER                    0x98
#define C_VER                    129//大于9.8、9.9时，用z z2.4以上，识别C_VER 最大255
//-------------------------------------------------------------------------------------
#define BOOT_EN                  1//BOOT  升级功能，APP区8000-F9FF, CH-CURVE区FA00-FBFF, BOOT区FC00-FFFF
//优化空间...主要针对GPRS-定位或打印的仪器空间不足的问题.......................................
#define OPT_EN                   1//GPRS+GPS最省FLASH优化，去掉【adc lcd 2位和0位小数、uart】,PT调整不优化、光照等2位小数不优化
//-----------------------------------------------------------------------------------
#define LCD_NO                   7//2种型号07，08.  08自动选择关屏SD_ENABLE=1,除非LCD08_ALL_ON=1
#define LCD08_ALL_ON             0//LCD08在省电模式时不关屏
#define LCD07_SHUT_EN            0//LCD07在省电模式时关屏

#define LCD08_SD_SHIFT_EN        0//只对08有效，cmd或key切换省电模式和正常模式,SD_ENABLE必须开启，默认省电模式
//-------------------------------------------------------------------------------------
#define WDT_ENABLE               1//内部看门狗 zz
//----------------------------------------------------------------------------------
#define DCDC_ALL_EN              0//DCDC电源一直开,没有省电模式
#define AD_BIG_NULL_EN           0//4-20mA,采样，AD NULL 判断 600起
//-------------------------------------------------------------------------------------
#define REF_EX_EN                0//外部基准使能  PT100
//-----------------------------------------------------------------------------------
#define MIN_MAX_AVG_ENABLE       1//最大最小值显示,在GPRS时默认关闭，可通过 GPRS_MIN_MAX_EN 开启
//---------------------------------------------------------------------------------------------
#define GPRS_MIN_MAX_EN          0//GPRS 最大最小平均值查询开
//--------------------------------------------------------------------------------------------
#define PRINT_ALL_EN             0//全程打印，特征点最多50个点，打印需同时.开启 MIN_MAX_AVG_ENABLE 和 RS232_ENABLE
#define PRINT_ALL_CURVE          0//全程打印包括曲线
//-------------------------------------------------------------------------------------------
#define PRINT_REAL_EN            0//记录一条,打印一条,曲线(通道1)
#define PRINT_BSQ_DATA           0//记录一条打印一条，【W93无线变送器】，【PRINT_RT_LIST_EN=1】,【GPRS打印必须关闭，PRINT_NEW_EN=0】

#define PRINT_RT_LIST_EN         0//记录一条, 打印一条, 列表(默认通道1)
#define PRINT_RT_ALL             0//记录一条，打印一条，列表，全部通道, 前提：PRINT_RT_LIST_EN=1
#define PRINT_RT_LIST_BK_SD      0//记录一条，打印一条，列表，包括通道2，湿度 ，前提：PRINT_RT_LIST_EN=1
#define PRINT_RT_LIST_BK_2WD     0//记录一条，打印一条，列表，包括通道2，温度 ，前提：PRINT_RT_LIST_EN=1

#define PRINT_RT_AL_EN           0//超标时才打印，必须全部打印

//只有232接口才可以打印，当其他通讯时，会有记录，可以手动清空，但不能打印
//-------------------------------------------------------------------------------
#define PRINT_NEW_EN             1//打印PRINT_NEW_CAP条数据,LOG和MAX键同时按住3秒清空打印缓冲, GPRS时 PRINT_NEW_EN 必须开启
#define PRINT_ALL_CH_EN          0//打印全部通道，否则只有通道1
#define RPTINT_ONLY_WD_EN        0//只打印全部温度，不打印湿度，只针对G95-2,3,4,6,8 和 G93-2,3,4（顺丰要求）
#define PRINT_2WD_EN             0//打印温度1,温度2，现只支持G95-4
#define PRINT_1W1S_EN            0//打印温度1-湿度1


#define PRINT_INFOR_EN           0//增加SN，开始时间，结束时间，记录间隔，记录条数等信息
#define PRINT_MIN_MAX_EN         0//打印最大最小值
#define RPINT_KS_JS_FH_SH        0//最后4行变成，有效开始时间，有效结束时间，发货方 ，收货方

#define PRINT_NEW_CURVE_EN       0//打印通道1包括曲线, 最多100条



//----------------------------------------------------------------
#define SMS_INTERVAL_TIME        ((u16)60*10)//短信报警间隔，默认10分钟
//------------------------------------------------------------------
#define PRINT_BP_2MIN_EN         0//超标变频打印， GPRS-打印
#define PRINT_BP_JIANGE          ((u16)60*2)//变频后打印间隔2
//--------------------------------------------------------------------------------------
#define PRINT_JIANGE             ((u16)60*5)//打印、记录间隔时间
#define PRINT_NEW_CAP            ((u16)100)//打印缓冲容量,不能超过 3000
#define PRINT_CH_BYTE            (4+CH_NUM*2)//通道数据占据字节数: 20=时间(4)+N*通道数据(2)(-3276.7-3276.7)默认一位小数
//-------------------------------------------------------------------------------------
#define LED_WORK_ENABLE          0//LED指示灯,只能是LCD08,必须LCD08_ALL_ON=1

//--------------------------------------------------------------------------------------
#define RY_CONTROL_ENABLE        0//继电器触点控制，最多2个通道, 触点控制上下限与声光报警上下限不同。
//----------------------------------------------------------------------------------------
#define RY_GSM_ENABLE            0//控制短信继电器
//-----------------------------------------------------------------------------------
#define PHONE_ALARM_ENABLE       0//tiger911电话报警
//-----------------------------------------------------------------------------------
#define RY_ALARM_EN              0//任一通道超标后，继电器 RY闭合

//--------------------无线传感器-------------------------------------------------------------
#define RF_CMD_MAX               21//FF版本，无线传感器最大字节 F0(1)+地址(1)+字节数x(1)+目标SN号(10)+电量W(1)+通道数N(1)+通道数值(2*N)+CRC16(2)
#define RF_CC_EN                 1//CC版本，否则为FF版本

//-----------------------------------------------------------------------------------------
#define RF_PP_115200_EN          0//PP版本，必须 RF_CC_EN=1, 115200/8 b/s-> 14400/2  B/s  -> 7200 B/s  1B/0.14ms

//======================无线传感器或TTL传感器要接到U1切换============================================================================
#define RF_U1_EN                 0//U1到RF, FW不需要，变送器GPRS-RF 或 记录仪SMS-RF 或GPRS+CO2TTL ,第二键切换U1到PC(显示08)或RF,GPRS，按下打印键，自动切换到PC,打印完成后，回到RF
#if RF_PP_115200_EN==1
  #if RF_U1_EN==1// U1在RF-115200 和 PC9600 之间切换
  #else // U0接在 RF-115200
    #undef TA1_DELAY
    #define TA1_DELAY            20//>=0.6ms, 提高接收速度，主要用于多机接收机
  #endif
#endif

//======================无线接收机(RF_YQ_EN、RF_MULTI_EN二选一)--------------------------------------------
#define RF_YQ_EN                 0//单机，最多8通道

//----------------------多机-中继接收一体------------------------------------------------------
#define RF_MULTI_EN              0//多机，做无线传感器的中转,不做轮显,只显示连接的传感器数
#define RF_REC_RP_TIME           59//地址H2以上接收机每59秒发送一次Cn指令

//------------------------------------------------------------------------------------------------
#define RF_MULTI_MNJ             0//模拟机

#if RF_MULTI_MNJ==1
  #define RF_SEN_MAX             100//模拟100
#else
  #define RF_SEN_MAX             100//128//最大传感器数
#endif

#if RF_YQ_EN==1
  #undef RF_SEN_MAX
  #define RF_SEN_MAX             8
#endif

#define RF_SAMP_TIME             55//扫描间隔,接收缓冲转至通道数据
#define RF_TIMEOUT               ((u16)61*30)//超时  zz

#if ((RF_YQ_EN==1)||(RF_MULTI_EN==1))
  #undef MIN_MAX_AVG_ENABLE
  #define MIN_MAX_AVG_ENABLE     0//最大最小值去掉
  #define RF_REC_EN              1//无线接收机
#else
  #define RF_REC_EN              0
#endif


//=========================无线中继器(转发单条指令)=============================================
#define RF_RP_EN                 0//中继器
#define RF_RP_TIME               ((u16)60*5)// 掉线超时时间
#define RF_RP_MAX                254//128//中继器接收的传感器数, 最大 254
#define RF_RP_SEN_BYTE           60//每个传感器占59字节，，8通道59，1通道24


#if ((RF_RP_EN==1)||(RF_MULTI_EN==1))
  #undef MIN_MAX_AVG_ENABLE
  #define MIN_MAX_AVG_ENABLE     0//最大最小值去掉
#endif


//==============================================================================================
//无线----------------------------无线模块和风速风向引脚冲突，要特别处理过
#define WIRELESS_ENABLE          0//无线，占用U0, 必须GSM_ENABLE=0，MODBUS_ENABLE=1

#define RF_TXRX_470M_EN          0//采用470M无线模块，可按键设置频率

#if WIRELESS_ENABLE==1           //记录仪按钮为第1个, 变送器按钮为第4个
  #define U0U1_ENABLE            1//1//U0RX->U1TX ; U1RX->U0TX; 按钮1按住3秒进入或退出,LCD显示上限超标
#else
  #define U0U1_ENABLE            0
#endif


//U0U1透传-------------------------------------------------------------------------------------------
#define U0U1_TONG_EN             0

//#if ((U0U1_TONG_EN==1)||((RF_REC_EN==1)&&(RF_U1_EN==0)))//zz
#if (U0U1_TONG_EN==1)//zz
    #undef  U0U1_ENABLE
    #define U0U1_ENABLE          1
#endif

//-----定位 LBS  ----------------------------------------------------------------------
#define LBS_LAC_EN               0//LBS 返回 LAC+CID
#define LBS_JWD_EN               1//LSB 返回 经纬度  L206

#define GPRS_UP_ONE_EN           0//GPRS每次只上传一条 //zz 肖总GPS服务器要求


//--------定位 GPS BD------------------------------------------------------------------------------
#define GPS_MOUSE_EN             0//定位，不能与GPRS-RF共用U1
#define GPS_REC_JG_TIME          5//接收间隔,有信号时闪烁间隔
#define GPS_TIME                 310//超时 5分钟


//--------------------------------------------------------------------
#define GPS_RTC_EN               0//GPS时钟自动校时
#define D_RTC_TIME               60//超过1分钟误差，即自动对时

//-----------------------------------------------------------------------------------------------
#define SIM68_EN                 0//N10、SIM68定位，需GPS_MOUSE_EN ==1,RF_U1_EN ==1
#define SIM68_SLP_EN             1//休眠模式：正常模式时不休眠，省电模式时,GPS在收到正确定位数据后休眠，1分钟后唤醒，错误数据不休眠
#define SIM68_SLP_TIME           40//每次休眠时间，唤醒后大概需20秒才能接收正常数据

#define SIM68_INV_TIME           20//连续收到无效数据的超时时间
#if SIM68_EN==1
#undef RF_U1_EN
#define RF_U1_EN                 1//SIM68放置在 U1，通过切换
#endif
//----------------------------------------------------------------------------------------------
#define GPS_STATIC_EN            0//静态漂移算法,速度判断
#define GPS_KMH                  60//即6.0km/h

#define SIM68_BC_TIME            ((u16)60*5)//bc为5分钟前的数据
#define SIM68_BC_VAL             1500//最新数据与bc数据的差值，如果超出则判断在移动

//-------GSM-GPRS--------------------------------------------------------------------------------
//模块选择，默认 MG301
#define SIM800C_EN               1//SIM800C
#define GSM_EM310_EN             0//EM310
#define GSM_MG323_EN             0//MG323 短信满后，无法再收短信，模块BUG, GPRS现在没有短信接收，所有可不考虑

//---------------------------------------------------------------------------------------------
#define GSM_ENABLE               1
//-------------------------------------------------------------------------------------------------
#define SMS_POW_EN               0//断电短信, ---------09GPRS没有断电检测
#define GPRS_POW_EN              0//断电GPRS，---------09GPRS没有断电检测

//-----------------------------------------------------------------------------------
#define BAT_LCD_EN               1//电量提示、保温箱GPRS、在A通道号处显示电池电量0-9 .通道数不能大于2
#define NO_EXPOW_EN              1//无外部电源检测------09GPRS板子无

//..................................................................................
#define GSM_KEY_SHUT_EN          1//开关模块(【ALarm键】/【GPRS_ENABLE==1时为Pow键,屏灭】),灯灭;
//--------------------------------------------------------------------------------------------------
#define GPRS_ENABLE              1//GPRS模式时，串口变送器记录失效，按照GPRS记录启用
#define GPRS_6OFF                1//60FF，否则70FF,温度采集一直开，保温箱使用
#define RTC_UTC_EN               0//时钟服务器，自动对时,手动开机，对时一次，对时时不记录

#define GPRS_DATA_CLR_EN         0//关机时，GPRS数据清空


//--------------------------------------------------------------------------------------------
#define GPRS_FFEEDD_EN           0//哲勤协议，原路格指令每包数据尾加 FF EE DD

//--------------------------------------------------------------------------------------------------
#define GPRS_SERVER_OK_EN        0//单包指令，路格协议2, 带回文校验，发送成功判断300.10
#define GPRS_SERVER_TIMEOUT      25//20秒超时


//---------------------------------------------------------------------------------------------
//GPRS_TC_EN 时，进行了深层次优化，U0,U1 init 都进行优化
//有数据待发送时LED亮，无数据LED灭
#define GPRS_TC_EN               1//透传,两键清空打印数据，zz重启清空打印、PC以及GPRS数据
#define TC_WAIT_T                15//20//25//每次重试发送数据间隔  zz
#define TC_WAIT_LONG             60//上传失败后下次发送间隔
#define TC_115200_EN             0//使用115200波特率，不能配置成MCU省电模式，暂时不用

//-------------------------------------------------------------------------------------------------
#define GPRS_UP_TIME_EN          1//上传间隔可设置，这样记录间隔和上传间隔分离，方便做省电
#define GPRS_PRT_CAP_EN          1//打印容量可设置,0为默认最大记录条数打印

#define GPRS_PRT_JG_EN           1//打印间隔固定，比如5分钟一个点(记录间隔<=1分钟时起作用)
#define PRINT_SF_TIME            ((u16)60*5)//打印间隔时间 zz


#if TC_115200_EN==1
    #undef TA1_DELAY
    #define TA1_DELAY            20//115200时间，超时时间0.6ms
    
    #define TCP_MAX              ((u16)1200)//一个TCP最大字节数

#else
    //9600bit/s-> 960B/1000ms -> 每字节需时 1.042ms, 1400字节大概 1458ms
    //SIM800C,一个TCP包需要在1秒内传完，所以 每包总字节数不能太多  1000ms/1.042ms=959
    #define TCP_MAX              ((u16)800)//一个TCP最大字节数
#endif

//----------------------------------------------------------------------------------
#define ON_OFF_BJ_EN             1//开关机标记记录，上电断电标记

//---------------------------------------------------------------------------------
#define GPRS_UDP_EN              0//1为UDP，0为TCP

//-----------------------------------------------------------------------------------------------
#define BSQ_REC_AA_EN            0//WIFI变送器，记录和下载协议同，AA指令， 需GPRS_TC_EN=0 

//--------------------------------------------------------------------------------
#define GPRS_LG31_3000_EN        1//LUGE31指令，做TC, 支持GPRS和WIFI ,支持多包续传
#define TCP_RTC_EN               1//回文，自动对时


//LUGE协议，一个TCP包总字节数 m(17+2*CH_NUM)+3*CH_NUM+28
//顺丰协议，一个TCP包总字节数 m(34+5*CH_NUM)+20 + x(7E转换后多出的不确定数)
#if GPRS_LG31_3000_EN==1
  #define TC_PER_NUM            ((TCP_MAX-(3*CH_NUM+28))/(17+2*CH_NUM))//每包最大条数
#else
  #define TC_PER_NUM            ((TCP_MAX-20)/(34+5*CH_NUM))//未包括未知数x, 因此需要留一定余量
#endif


//--------------------------------------------------------------------------------------
#define BOOT_FROM_EE_EN          1//升级后，上电从EE取参数


//该型号可能是保温箱，开启电量显示, 中继器也开启电量指示
#if (((GPRS_ENABLE==1)&&(JLY_MODEL==_1_NTC)&&(RF_U1_EN==0))||(RF_RP_EN==1)||(RF_MULTI_EN==1))
#undef  BAT_LCD_EN
#define BAT_LCD_EN               1
#endif

//-------------------延时报警----------------------------------------------------------
#define SMS_IN_AL_EN             0//持续超标才发短信报警
#define SG_IN_AL_EN              0//持续超标才声光报警
#define SMS_IN_AL_TIME           ((u16)60*10)
//-------------------------------------------------------------------------------------
//.......................................................................................
#define ALARM_LED_EN             0//超标报警时，LED闪烁
//-------------------------------------------------------------------------------------------
#define ALARM_NO_CN              0//报警开关不显示中文，报警开 10，报警关 11
//--------------------------------------------------------------------------------------
#define POW_NONE_ALARM_EN        0//外电没有时，声光报警
//........................................................................................
//蜂鸣器报警时间隔报警（例30分钟报警15秒），一直持续，数据正常后，停止报警
#define ALARM_BELL_TIME_EN       0//不能和 ALARM_TIME_ENABLE 同时使用
//如果一直超标则一直报警，当没超标后，报警仍然以半小时为间隔报警15秒，直到手动开关报警恢复初始
#define ALARM_TIME_ENABLE        0//1，2通道适用，警报15秒每30分钟
//报警间隔时间
#define ALARM_JIANGE             1800//报警间隔时间
#define ALARM_CHIXU              15//报警持续时间
//.......................................................................................
//超过60，70，...200度时，警报15秒
#define ALARM_POINT_ENABLE       0//适用于1通道，点到了(60.70...200)报警15秒,(上升或下降)
#define ALARM_POINT_TIME         15

//--------------------------------------------------------------------------------------------
#if GPRS_ENABLE==1
#undef MIN_MAX_AVG_ENABLE
#define MIN_MAX_AVG_ENABLE       0//GPRS取消最大最小显示
#endif

#if GPRS_MIN_MAX_EN==1
#undef MIN_MAX_AVG_ENABLE
#define MIN_MAX_AVG_ENABLE       1//GPRS最大最小显示
#endif

//.................................................................................
#define READ_RTC_TIME            10//10秒读一次
//..............................................................................
#define SMS_SET_EN               0//通过短信设置上下限和手机号码
//..............................................................................
#define SMS_WSD_DEDICATED_EN     0//多字，温湿度报警专用，否则通用
//..............................................................................
//电池快用完时，发送短信提示
//拨打电话时，通话自动切断，并返回温度，电池信息
//TEST 测试键，测试短信发送
#define GSM_TXT_EN               0//英文格式，短信编码方式 TXT, 否则 PDU
#define GSM_KEY_TEST_EN          0//测试键，发送SMS ok.
#define GSM_BATT_INFOR_EN        0//查询时SMS包括电池信息

#define GSM_BATT_ALARM_EN        0//电池低压报警
//..............................................................................
#define SMS_INV_ENABLE           0//SMS定时发送模式
//以下为电池供电，按钮开关，数据打包............................................
#define SMS_DAY_POT_EN           0//按天打包发送(固定在2点,8点,14点,20点)
#define SMS_BATONLY_ENABLE       0//GSM只由电池供电，电池低于3.4v时或发送短信失败，不再启动GSM模块
#define SMS_RECORD_ENABLE        0//SMS记录 ing

//..................................................................................................
//省电模式下，如果记录间隔小于（POWER_D_TIME+LCD_REFRESH_TIME*FILET_NUM),
//传感电源会一直开启，不具省电功效。
#define DIGITAL_FILTER_EN        1//中值平均滤波法, 本程序只对AD值进行滤波，所以没有负数
#define FILET_NUM                10//去掉两头，只保留中间 FILET_MID 个求均值
#define FILET_MID                4
#define DIGITAL_CHANGE_EN        0//AD变化超过CHANGE_AD_MAX,则滤波清0,显示快速变化
#define CHANGE_AD_MAX            200

#if RF_REC_EN==1
  #undef  DIGITAL_FILTER_EN
  #define DIGITAL_FILTER_EN      0
#endif


//...............只能选一.......................................................................
//打印+232 都选才会打印，否则如USB接口时，不会打印，节省大量FLASH空间
#define USB_ENABLE               0
#define RS232_ENABLE             1
#define RS485_ENABLE             0
#define RJ45_ENABLE              0
#define WIFI_ENABLE              0//带多包续传功能, 记录和下载用AA指令
//.......................................................................。。。........

//------------------------------------------------------------------------------------
#define RECORD_ENABLE            0//记录仪模式，否则为变送器模式
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
#if RECORD_ENABLE==1             //记录仪模式
  #define L_SYN_RTC_EN           1//记录条数与RTC自动同步，即自动补数据 
  #if U0U1_ENABLE==1
    #define KEY_SET_ENABLE       1
  #else
    #define KEY_SET_ENABLE       0
  #endif
  #define SHUXIAN_ENABLE         0
  #define BSQ_ENABLE             0
  #define MODBUS_ENABLE          0
  #define PCBSQ_RECORD_EN        0

#else                            //显示计、变送器模式(只是通讯不一样，其他一样)
  #define SHUXIAN_ENABLE         1//数显计(没有地址)，不带存储，不带通讯, 最大最小值平均值存放在RAM，每次开屏开始计算
  #if ((GPRS_ENABLE==1)||(PRINT_NEW_EN==1))
    #define KEY_SET_ENABLE       0//GPRS和打印设备，屏蔽按钮功能目的，节省大量程序空间
  #else
    #define KEY_SET_ENABLE       1//按钮设置功能,现只支持2通道
  #endif
  #define MODBUS_ENABLE          1//兼容modbus协议
  #define BSQ_ENABLE             1//变送器，地址存放在EE,必须使能 SHUXIAN_ENABLE=1,RECORD_ENABLE=0
  #define PCBSQ_RECORD_EN        1//PC级，带记录，不能和 RECORD_ENABLE同时使用
  //非GSP要求的，不必开启变频记录
  #if GSP_ENABLE==1
    #define BP_ALARM_EN          1//报警时,变频记录间隔变为2分钟（前提：记录间隔大于2分钟时有效）
  #else
    #define BP_ALARM_EN          0
  #endif
#endif


 

//.................................................................................
#define EX_DOG_ENABLE            1//外部看门狗 TPS3823-30DBVR
//.........................................................................................
#define RTC_RECORD_ENABLE        0//开启带RTC记录

//........................................................................................
#define RECORD_TIME_FIRST        10//记录间隔(默认)
//--------------------------------------------------------------------------------
//........................................................................................
#define LCD_X_ENABLE             0//刷屏时间，0时与采样同步, ch1,ch2
#define LCD_X_TIME               10//2路刷屏时间
//--------------------------------------------------------------------------------------
#define LCD_SHOW_TIME            2//LCD多路翻屏时间间隔
#define LCD_REFRESH_TIME         ((u16)10)//采样间隔:秒

#if LCD_NO==8
#undef LCD_REFRESH_TIME
#define LCD_REFRESH_TIME         ((u16)10)//08采样间隔默认10秒
#endif

//-------------------------------------------------------------------------------------------
//...............................................................................
#define BAUDRATE_SYSTEM          9600//系统波特率（可休眠ACLK）
#define BAUDRATE_GSM             9600//GSM模块波特率
#define BAUDRATE_WIRELESS        9600//无线模块波特率
//..............................................................................
#define DOWNLOAD_TIMEOUT         10//下载数据超时时间（秒）zz

#if USB_ENABLE==1
  #define BAUDRATE_DOWNLOAD      115200//下载数据时波特率（SMCLK115200不休眠）
#else
  #define BAUDRATE_DOWNLOAD      9600//下载数据时波特率（SMCLK115200不休眠）
#endif

#define BAUDRATE_RF_DOWNLOAD     9600//记录仪无线模式时，无线下载时波特率固定为9600
#define BAUDRATE_PRINT           9600//炜煌打印机设置为9600时比115200稳定
//..................................................
#define SAVE_EEPROM              1//注意：存储器选择EEPROM时, 选择24C256或24C512在i2c.h
#define SAVE_FLASH               2//选择FLASH时对应256
#define SAVE_SD                  3
#define SAVE_MEMORY              SAVE_EEPROM
//..............................................................................
#define ADC_CONSEQ_N             140//每次采样次数，求平均，可以滤掉波动
#define VBAT_TIME                120//n*0.5s
//.................................................................................
#if AD_BIG_NULL_EN==1
  #define ADC_ERR_L              600
#else
  #define ADC_ERR_L              100
#endif
#define ADC_ERR_H                4080
#define ADC_PT_ERR_L             150//PT三线制，未接传感器时AD

//=================================================================================================

#if PRINT_NEW_EN==1

  #if GPRS_TC_EN==1
     #define EE_STATE_NUM_MAX       ((u16)360)//EE最后一组空间存放记录仪信息
  #else
     #define EE_STATE_NUM_MAX       ((u16)360+(PRINT_NEW_CAP*PRINT_CH_BYTE+4))//EE最后一组空间存放记录仪信息
  #endif

#else

  #define EE_STATE_NUM_MAX          ((u16)360)//EE最后一组空间存放记录仪信息

#endif


#define RECORD_FIRST_ADDR         0x0000//数据存储首地址
#define EE_MEM_ADDR               ((u32)EE_SIZE+1)//EE通道数据存储，非下载的历史数据

#define STATE_FIRST_ADDR          ((u32)EE_MEM_ADDR-EE_STATE_NUM_MAX)//工作参数首地址



//每条记录字节数，通讯部分与储存部分，要区分，通讯时，按最大兼容 GPS定位 信息，如果不带定位，记录部分没有定位数据，字节数据占用少

//GPRS-wifi通讯时每条记录占用字节数， RTC(4)+BAT(1)+GPS(8)+2*CH_NUM
#define GPRS_WIFI_SIZE         ((u16)13+2*CH_NUM)

//GPRS-wifi 每条记录储存时占用的字节数
#if ((GPS_MOUSE_EN==1)||(LBS_LAC_EN==1)||(LBS_JWD_EN==1))
      #define ONE_SIZE          ((u16)13+2*CH_NUM)//每条记录占用字节数， RTC(4)+BAT(1)+GPS(8)+2*CH_NUM
#else
      #define ONE_SIZE          ((u16)5+2*CH_NUM)//每条记录占用字节数， RTC(4)+BAT(1)+2*CH_NUM
#endif

#define PCBSQ_REC_CAP_FIRST    ((u16)STATE_FIRST_ADDR/ONE_SIZE)//记录容量，GPRS和打印一体


#if ((GPRS_ENABLE==1)&&(GPRS_TC_EN==1))

      //去MODBUS_ENABLE,只能用记录仪指令，不能用变送器指令
      #if RF_REC_EN==0//无线卡片带有CRC校验，不能去掉这个 
          #undef MODBUS_ENABLE
          #define MODBUS_ENABLE           0//GPRS去掉这个后，可节省大量FLASH空间  
      #endif


#elif ((GPRS_ENABLE==1)&&(GPRS_TC_EN==0))//LG31，第1版

    #undef PCBSQ_REC_CAP_FIRST
    //m=(1400-(3n+28))/(17+2n),,n=1->m=72,,n=8->m=40  zz
    //#define PCBSQ_REC_CAP_FIRST      (((u16)1400-(3*CH_NUM+28))/(17+2*CH_NUM))//GPRS传输点数，存储地址从0x0000开始
    #define PCBSQ_REC_CAP_FIRST    ((u16)40)//GPRS传输点数，存储地址从0x0000开始

#elif ((GPRS_ENABLE==0)&&(BSQ_REC_AA_EN==0))//变送器，默认1000条

   #undef PCBSQ_REC_CAP_FIRST
   #define PCBSQ_REC_CAP_FIRST    ((u16)1000)//存储地址从0x0000开始

#endif




#define PCBSQ_REC_TIME_FIRST     ((u16)60*30)//(s)默认记录间隔30分钟 


#if WIRELESS_ENABLE==1
#define PCBSQ_BAG_SIZE           ((u16)100)//无线通讯时，为了通讯稳定，一包数据不能大于100
#else
#define PCBSQ_BAG_SIZE           ((u16)255)//数据包最大数(1字节<=255)
#endif




#if SAVE_MEMORY==SAVE_EEPROM
  #define U0MAX                      400//200  zz
  #define U1MAX                      300

  #if RF_MULTI_EN==1
    #undef U0MAX
    #define U0MAX                    780
    #undef U1MAX
    #define U1MAX                    100
  #endif
  

  #if WIRELESS_ENABLE==1
    #undef U0MAX
    #define U0MAX                    500
    #undef U1MAX
    #define U1MAX                    500

    #define RF_LOAD_BAG_MAX_SIZE     150//无线下载包最大字节150稳定
  #endif

  #if PRINT_ALL_EN==1
  #undef U1MAX
  #define U1MAX                      800//每一通道50点，占50*2=100字节 共8个通道 800
  #endif


  //USB速度快，包400，其他慢300
  #if USB_ENABLE==1
    #define DOWNLOAD_BAG_MAX_BYTES     400//下载包数据区7最大字节数 
  #else
    #define DOWNLOAD_BAG_MAX_BYTES     300//下载包数据区7最大字节数 
  #endif

#endif

//...............................................................................
#if (((JLY_MODEL==_1_NTC)||(JLY_MODEL==_2_NTC))&&(LCD_NO==8))
  #define BATT_XV          30//L91用CR2032电池
#else
  #define BATT_XV          36//3.6v或3.0v，电池电压显示时区分
#endif


//...............................................................................
#if BATT_XV==36//3.6v锂电池
#define BAT_LOW            330
#elif BATT_XV==30//3.0v锂电池
#define BAT_LOW            260
#endif


#define A1_TIME                ((u16)60)//1分钟
                                       

//.........................................................................................
#if ((JLY_MODEL==_8_DS18B20_F55_125)||(JLY_MODEL==_6_DS18B20_F55_125)||(JLY_MODEL==_1_DS18B20_F55_125)||(JLY_MODEL==_2_DS18B20_F55_125)\
  ||(JLY_MODEL==_2_K_F200_1350_DS_F55_125)||(JLY_MODEL==_2_DS18B20_HIH)||(JLY_MODEL==_4_DS18B20_F55_125)||(JLY_MODEL==_3_DS18B20_F55_125))
  #define OW_ENABLE         1//单总线
#endif


#if ((JLY_MODEL==_1_K_F200_1350)||(JLY_MODEL==_2_K_F200_1350_COLD)||(JLY_MODEL==_2_K_F200_1350_DS_F55_125)||(JLY_MODEL==_3_K_F200_1350))
  #define  K_MAX31855_EN  1//热电偶 MAX31855
#endif

#if ((JLY_MODEL==_1_RTD_F200_300)||(JLY_MODEL==_4_RTD_F200_300))
  #define PT_MAX31865_EN    1//MAX31865  PT
  #undef LCD_REFRESH_TIME
  #define LCD_REFRESH_TIME  ((u16)5)//采用间隔10s, 比2s节省时间
#endif


//...........................................................................................
#if ((JLY_MODEL==_1_TRSF)||(JLY_MODEL==_2_NTC_TRSF)||(JLY_MODEL==_3_2NTC_TRSF)||(JLY_MODEL==_6_3NTC_3TRSF)\
  ||(JLY_MODEL==_8_4NTC_4TRSF)||(JLY_MODEL==_4_NTC_HIH_NTC_TRSF)||(JLY_MODEL==_3_WD_TRSF_GZ200K)||(JLY_MODEL==_5_WD_TRSF_GZ200K_WD_SD)\
    ||(JLY_MODEL==_4_2NTC_2TRSF)||(JLY_MODEL==_4_TRSF)||(JLY_MODEL==_6_TRSF)||(JLY_MODEL==_5_TRSF)\
      ||(JLY_MODEL==_3_TRSF)||(JLY_MODEL==_5_4NTC_TRSF)||(JLY_MODEL==_2_TRSF)\
      ||(JLY_MODEL==_8_WD_GZ100K_SD_YL01_TRWD_TRSF_FS_FX)||(JLY_MODEL==_8B_WD_GZ100K_SD_YL01_TRWD_TRSF_FS_FX)\
      ||(JLY_MODEL==_8B_WD_GZV200K_SD_YL01_TRWD_TRSF_FS_FX)||(JLY_MODEL==_5_1W1TRSF_1W1TRSF_1W)\
        ||(JLY_MODEL==_6_1W1TRSF_1W1TRSF_2W)||(JLY_MODEL==_5_WD_GZ100K_TRWD_TRSF_SD)||(JLY_MODEL==_1_HCH2O_TTL_0_373)\
          ||(JLY_MODEL==_7_WD_GZ100K_TRWD_TRSF_SD_YL01_QY)||(JLY_MODEL==_1_CO2_TTL_5000)||(JLY_MODEL==_1_HCH2O_V_0_373)\
    ||(JLY_MODEL==_1_CO2_2000PPM)||(JLY_MODEL==_1_CO2_5000PPM)||(JLY_MODEL==_2_CO2_2000_NTC)\
      ||(JLY_MODEL==_1_CO2_SOHATECH_3K)||(JLY_MODEL==_2_CO2_5000PPM)||(JLY_MODEL==_1_CO2_COZIR_W10V)\
        ||(JLY_MODEL==_1_CO2_0_5)||(JLY_MODEL==_2_CO2_5000PPM_SD)||(JLY_MODEL==_2_CO2_5000PPM_O2)||(JLY_MODEL==_3_NTC_HIH_CO2_5000PPM)\
          ||(JLY_MODEL==_1_CO2_MH410D_0_10)||(JLY_MODEL==_1_CO2_TTL_20BF)\
        \
        ||(JLY_MODEL==_1_SW_0_500mm)||(JLY_MODEL==_1_SW_0_1000mm)||(JLY_MODEL==_2_WD_SW_0_500mm)\
          ||(JLY_MODEL==_2_WD_SW_0_1000mm)||(JLY_MODEL==_2_WD_SW_500_10mm)||(JLY_MODEL==_1_SW_500_10mm)\
            ||(JLY_MODEL==_1_SW_0_50_m)||(JLY_MODEL==_2_WD_SW_0_3000mm)||(JLY_MODEL==_1_WD_SW_0_3000mm)\
              ||(JLY_MODEL==_1_SW_0_3000mm)||(JLY_MODEL==_1_SW_200_10mm)||(JLY_MODEL==_1_SW_1000_10mm)\
              ||(JLY_MODEL==_2_SW_30m_SHD_20m)\
            ||(JLY_MODEL==_2_YALI_160_10kpa_PTH)||(JLY_MODEL==_1_YALI_160_10kpa)||(JLY_MODEL==_1_YALI_400_kpa)\
            ||(JLY_MODEL==_3_YALI_400_kpa)||(JLY_MODEL==_1_YALI_F100_100_kpa)\
              \
         ||(JLY_MODEL==_1_GH_400_10umol)||(JLY_MODEL==_3_WD_SD_GH400_10umol)\
          \
            ||(JLY_MODEL==_1_SDU_200_10mm)\
              ||(JLY_MODEL==_1_PM25_V_1000)||(JLY_MODEL==_2_PM25_TTL1000_PM25V_1000)\
                ||(JLY_MODEL==_2_PM25_TTL1000_CO2_MISIR_5000)\
           \
            ||(JLY_MODEL==_1_GZV_200K)||(JLY_MODEL==_3B_WD_GZ100K_TRSF)\
              \
            ||(JLY_MODEL==_4_WD_SD_CO2_5000_GZ200K)||(JLY_MODEL==_4_WD_SD_CO2TTL5000_GZ200K)\
              \
             ||(JLY_MODEL==_6_2PT_2ROTYONIC_NTC_HIH)||(JLY_MODEL==_2_1PT_1ROTYONIC)||(JLY_MODEL==_8_4PT_4ROTYONIC)\
                 ||(JLY_MODEL==_8_4NTC_2HIH_2TRSF)||(JLY_MODEL==_6_1NTC_1HIH_2NTC_2TRSF)\
                   ||(JLY_MODEL==_7_4NTC_2TRSF_1HIH)||(JLY_MODEL==_6_4NTC_1HIH_1TRSF)\
                     ||(DS18B20_SLP_EN==1)\
                       ||(JLY_MODEL==_4_TRWD_TRSF_TYFS_ZF)\
                         ||(JLY_MODEL==_1_ROTYONIC)\
          )
  #define POWER_TIME_ENABLE    1//1时，SD_ENABLE必须为1，省电正常模式自动切换（co2,TRSF）
  #define POWER_D_TIME         ((u16)10)//10采样前电源打开时间 （秒）  
    #if ((JLY_MODEL==_6_2PT_2ROTYONIC_NTC_HIH)||(JLY_MODEL==_2_1PT_1ROTYONIC)||(JLY_MODEL==_8_4PT_4ROTYONIC)||(JLY_MODEL==_1_ROTYONIC))//rotronic 
    #undef  POWER_D_TIME
    #define POWER_D_TIME       5
    #endif
  #undef  RECORD_TIME_FIRST
  #define RECORD_TIME_FIRST    POWER_D_TIME+5//记录间隔至少大于POWER_TIME才有省电模式
#else
  #define POWER_TIME_ENABLE    0
#endif




//CO2自动校准,Z14、 48小时一次，必须持续供电，否则不起作用,所以 必须POWER_TIME_ENABLE=0
#if ((JLY_MODEL==_1_CO2_Z14_5000)||(JLY_MODEL==_2_CO2_Z14_5000)||(JLY_MODEL==_5_2NTC_2HIH_CO2_Z14_5000)||(JLY_MODEL==_7_3NTC_3HIH_CO2_Z14_5000)\
  ||(JLY_MODEL==_2_PM25_TTL1000_CO2_MISIR_5000)||(JLY_MODEL==_1_CO2_MISIR_5000)||(JLY_MODEL==_5_2NTC_2HIH_CO2_MISIR_5000)||(JLY_MODEL==_7_3NTC_3HIH_CO2_MISIR_5000)\
    ||(JLY_MODEL==_1_CO2_MK400_2000)\
      ||(JLY_MODEL==_1_PM25_TTL_1000)\
      )
  #define DCV_ALL_ON           1
  #undef POWER_TIME_ENABLE
  #define POWER_TIME_ENABLE    0
#else
  #define DCV_ALL_ON           0
#endif


//U0接收传感器 TTL信号 
#if ((JLY_MODEL==_1_CO2_TTL_5000)||(JLY_MODEL==_4_WD_SD_CO2TTL5000_GZ200K)||(JLY_MODEL==_1_CO2_TTL_20BF)\
  ||(JLY_MODEL==_5_WD_SD_WD_GZ200K_CO2TTL5000)||(JLY_MODEL==_3_NTC_HIH_CO2TTL20BF)||(JLY_MODEL==_7_WD_SD_WD_GZ200K_CO2TTL5000_2WD))
  #define SEN_UART_EN         1//UART接收，TTL数字传感器，比如GSS CO2  输出  Z 00777 z 00777
  #define CO2_GSS_TTL_EN      1//数据接收，按钮调零

#if ((JLY_MODEL==_1_CO2_TTL_20BF)||(JLY_MODEL==_3_NTC_HIH_CO2TTL20BF))//TTL 20% ，调零X 42 ,  输出值需x10
  #define  TTL_ZERO_X10       1
#else
  #define  TTL_ZERO_X10       0
#endif

#endif

#if (JLY_MODEL==_1_HCH2O_TTL_0_373)
  #define SEN_UART_EN           1//U0接收，TTL数字传感器
#endif


//U0、U1 选择
#if ((SEN_UART_EN==1)&&(RF_U1_EN==1))//TTL传感器接在U1,否则是在U0
  #define SEN_U1_EN        1
#else
  #define SEN_U1_EN        0
#endif




#if ((JLY_MODEL==_1_PM25_TTL_1000)||(JLY_MODEL==_2_PM25_TTL1000_PM25V_1000)||(JLY_MODEL==_2_PM25_TTL1000_CO2_MISIR_5000))
  #define SEN_U0_PM25_EN     1
#endif

#define SD_TIME               180//（秒）  

//省电模式打开，开屏时实时更新，关屏时记录一次更新一次。
#if ((LCD_NO==8)||(POWER_TIME_ENABLE==1))

  #define SD_ENABLE             1

  #if LCD08_ALL_ON==1
    #undef SD_ENABLE
    #define SD_ENABLE           0
  #endif

#else

  #define SD_ENABLE             0

  #if LCD07_SHUT_EN==1
    #undef SD_ENABLE
    #define SD_ENABLE           1
  #endif
 
#endif


//...............................................................................
#if ((JLY_MODEL==_2_FS_FX)||(JLY_MODEL==_6_WD_GZ100K_SD_YL01_FS_FX)\
    ||(JLY_MODEL==_6_WD_GZ100K_SD_YL05_FS_FX)||(JLY_MODEL==_3_FS_FX_01YL)\
      ||(JLY_MODEL==_8_WD_GZ100K_SD_YL01_TRWD_TRSF_FS_FX)||(JLY_MODEL==_8B_WD_GZ100K_SD_YL01_TRWD_TRSF_FS_FX)\
        ||(JLY_MODEL==_8B_WD_GZV200K_SD_YL01_TRWD_TRSF_FS_FX)||(JLY_MODEL==_6B_WD_SD_QY_YL01_FS_FX)||(JLY_MODEL==_6_WD_SD_QY_YL01_FS_FX))
   #define FS_FX_ENABLE        1
#else
   #define FS_FX_ENABLE        0
#endif


//变送器雨量清0，固定1天清一次0
#if ((JLY_MODEL==_8B_WD_GZ100K_SD_YL01_TRWD_TRSF_FS_FX)||(JLY_MODEL==_8B_WD_GZV200K_SD_YL01_TRWD_TRSF_FS_FX)\
                   ||(JLY_MODEL==_6B_WD_SD_QY_YL01_FS_FX)||(JLY_MODEL==_6_WD_SD_QY_YL01_FS_FX))
   #define BSQ_YL_ENABLE    1 // 变送器雨量固定在通道4，StateC.Value[3]=Pt.RainPt=0;
#else
   #define BSQ_YL_ENABLE    0
#endif


//..............................................................................
#if ((JLY_MODEL==_3_WD_SD_GZ100K)||(JLY_MODEL==_3_WD_SD_GZ200K)||(JLY_MODEL==_5_WD_TRSF_GZ200K_WD_SD)\
  ||(JLY_MODEL==_1_GZ_100K)||(JLY_MODEL==_1_GZ_200K)||(JLY_MODEL==_2_WD_GZ100K)\
  ||(JLY_MODEL==_6_WD_GZ100K_SD_YL01_FS_FX)||(JLY_MODEL==_6_WD_GZ100K_SD_YL05_FS_FX)\
    ||(JLY_MODEL==_8_WD_GZ100K_SD_YL01_TRWD_TRSF_FS_FX)||(JLY_MODEL==_1_GZ_65K)||(JLY_MODEL==_6_2NTC_2HIH_2GZ100K)\
      ||(JLY_MODEL==_8B_WD_GZ100K_SD_YL01_TRWD_TRSF_FS_FX)||(JLY_MODEL==_2_WD_GZ200K)\
        ||(JLY_MODEL==_4_WD_SD_CO2_5000_GZ200K)||(JLY_MODEL==_4_WD_GZ100K_SD_YL01)||(JLY_MODEL==_4_WD_SD_CO2TTL5000_GZ200K)\
          ||(JLY_MODEL==_5_WD_GZ100K_TRWD_TRSF_SD)||(JLY_MODEL==_7_WD_GZ100K_TRWD_TRSF_SD_YL01_QY)\
            ||(JLY_MODEL==_1_GZ_100LX)||(JLY_MODEL==_1_GZ_1000LX)||(JLY_MODEL==_3B_WD_GZ100K_TRSF)||(JLY_MODEL==_4_WD_SD_WD_GZ200K)\
              ||(JLY_MODEL==_5_WD_SD_WD_GZ200K_CO2TTL5000)||(JLY_MODEL==_7_WD_SD_WD_GZ200K_CO2TTL5000_2WD)||(JLY_MODEL==_3_WD_TRSF_GZ200K))
   #define  GZ_ENABLE          1//照度使能
   #if (JLY_MODEL==_1_GZ_65K)
     #define  GZ_X             1//放大倍数
   #else
     #define  GZ_X             4//放大倍数, 滤光镜放大4倍 
   #endif
#else
   #define  GZ_ENABLE          0
#endif


#if (JLY_MODEL==_6_2NTC_2HIH_2GZ100K)
  #define SENCOND_GZ_EN         1//第二个光照
#else
  #define SENCOND_GZ_EN         0
#endif



//------------------------------------------------------------------------------
//..............................................................................
#if ((JLY_MODEL==_8_4NTC_4HIH5030)||(JLY_MODEL==_6_3NTC_3HIH5030)||(JLY_MODEL==_6_1PT_F40_100_1HIH_2NTC_2HIH)\
  ||(JLY_MODEL==_4_2NTC_2HIH5030)||(JLY_MODEL==_6_3NTC_3TRSF)||(JLY_MODEL==_8_4NTC_4TRSF)\
    ||(JLY_MODEL==_4_2NTC_2TRSF)||(JLY_MODEL==_8_4WD_0_80_4SD_0_100)||(JLY_MODEL==_4_2PT_F50_200_2HIH)\
      ||(JLY_MODEL==_6_2PT_2ROTYONIC_NTC_HIH)||(JLY_MODEL==_4_2PTH_2HIH)||(JLY_MODEL==_4_2PT_F50_100_2HIH))
  #define CH_PAIR_ENABLE     1//通道成对出现
#else
  #define CH_PAIR_ENABLE     0
#endif

#if RF_YQ_EN==1//无线接收，通道不成对
  #undef CH_PAIR_ENABLE
  #define CH_PAIR_ENABLE     0
#endif

//..........................................................................................
#if ((JLY_MODEL==_1_01YL)||(JLY_MODEL==_1_02YL)||(JLY_MODEL==_1_05YL)||(JLY_MODEL==_1_CS))
   #define ONLY_JS_ENABLE    1
#endif

//ADC7 是 电池测量
//..............................................................................
#if ((CH_NUM==8)||(JLY_MODEL==_1_01YL)||(JLY_MODEL==_1_02YL)||(JLY_MODEL==_1_05YL)||(JLY_MODEL==_1_CS))   
  #define BAT_AD_ENABLE      0//通道8，屏蔽电池电压采样
#else
  #define BAT_AD_ENABLE      1
#endif

#if RF_REC_EN==1//无线接收机，电池电压检测一直可以开，因为传感器不再占用AD口
  #undef BAT_AD_ENABLE
  #define BAT_AD_ENABLE      1
#endif

//............................................................................

#if ((JLY_MODEL==_1_CO2_2000PPM)||(JLY_MODEL==_1_CO2_5000PPM)||(JLY_MODEL==_2_CO2_2000_NTC)\
   ||(JLY_MODEL==_1_CO2_SOHATECH_3K)||(JLY_MODEL==_1_YALI_160_10kpa)||(JLY_MODEL==_2_CO2_5000PPM)\
   ||(JLY_MODEL==_1_DY_500_10mv)||(JLY_MODEL==_1_GH_400_10umol)||(JLY_MODEL==_3_WD_SD_GH400_10umol)\
     ||(JLY_MODEL==_1_SDU_200_10mm)||(JLY_MODEL==_4_WD_SD_CO2_5000_GZ200K)||(JLY_MODEL==_4_WD_SD_CO2TTL5000_GZ200K)\
       ||(JLY_MODEL==_2_WD_SW_500_10mm)||(JLY_MODEL==_1_SW_500_10mm)||(JLY_MODEL==_2_CO2_5000PPM_SD)||(JLY_MODEL==_1_SW_200_10mm)\
         ||(JLY_MODEL==_2_YALI_160_10kpa_PTH)||(JLY_MODEL==_2_CO2_5000PPM_O2)||(JLY_MODEL==_3_NTC_HIH_CO2_5000PPM)\
           ||(JLY_MODEL==_1_CO2_Z14_5000)||(JLY_MODEL==_2_CO2_Z14_5000)||(JLY_MODEL==_1_CO2_TTL_5000)||(JLY_MODEL==_1_SW_1000_10mm)\
             ||(JLY_MODEL==_5_2NTC_2HIH_CO2_Z14_5000)||(JLY_MODEL==_7_3NTC_3HIH_CO2_Z14_5000)||(JLY_MODEL==_2_FS_FX)||(JLY_MODEL==_3_FS_FX_01YL)\
               ||(JLY_MODEL==_1_CO2_MISIR_5000)||(JLY_MODEL==_5_2NTC_2HIH_CO2_MISIR_5000)||(JLY_MODEL==_7_3NTC_3HIH_CO2_MISIR_5000)\
                 ||(JLY_MODEL==_1_CO2_MK400_2000)||(JLY_MODEL==_6_WD_SD_QY_YL01_FS_FX)||(JLY_MODEL==_5_WD_SD_WD_GZ200K_CO2TTL5000)\
                   ||(JLY_MODEL==_7_WD_SD_WD_GZ200K_CO2TTL5000_2WD))
  #define U_x10_ENABLE     1//单位为x10模式，不显示小数点
#else
  #define U_x10_ENABLE     0
#endif


#if ((JLY_MODEL==_1_PT_0_300)||(JLY_MODEL==_2_PT_0_300)||(JLY_MODEL==_2_PT_F100_200)\
         ||(JLY_MODEL==_3_PT_0_300)||(JLY_MODEL==_4_PT_0_300)||(JLY_MODEL==_2_PT_F100_200_PH)\
          ||(JLY_MODEL==_1_PT_F100_200)||(JLY_MODEL==_11_PT_F200_0)\
            ||(JLY_MODEL==_1_PT_F200_50)||(JLY_MODEL==_2_PT_F50_350)\
          ||(JLY_MODEL==_3_PT_F100_200)||(JLY_MODEL==_4_PT_F100_200)\
            ||(JLY_MODEL==_4_PT_F50_300)||(JLY_MODEL==_4_PT_F40_100)\
              ||(JLY_MODEL==_1_PT_F40_100)||(JLY_MODEL==_1_PT_F40_250)\
                ||(JLY_MODEL==_1_PT_F200_100)||(JLY_MODEL==_1_PT_F20_120)\
                  ||(JLY_MODEL==_1_PT_0_200)||(JLY_MODEL==_2_PT_F40_100)||(JLY_MODEL==_4_PT_F50_200)\
                    ||(JLY_MODEL==_3_PT_F50_250)||(JLY_MODEL==_1_DZ_0_60_R)\
                      ||(JLY_MODEL==_3_PT_F50_300)||(JLY_MODEL==_1_PT_F50_300)||(JLY_MODEL==_4_PT_F200_100)\
                        ||(JLY_MODEL==_4_PT_F150_150)||(JLY_MODEL==_2_PT_F200_100)||(JLY_MODEL==_2_PT_F50_250)\
                          ||(JLY_MODEL==_3_PT_F200_100)||(JLY_MODEL==_4_PT_F50_250)||(JLY_MODEL==_4_PT_F50_150))
  #define PT_L_ERR_ENABLE     1//PT采用3线制，null临界判定, 单纯PT温度  
#else
  #define PT_L_ERR_ENABLE     0
#endif



#if ((JLY_MODEL==_1_SHR_30_120_kpa)||(JLY_MODEL==_7_WD_GZ100K_TRWD_TRSF_SD_YL01_QY)||(JLY_MODEL==_6B_WD_SD_QY_YL01_FS_FX)\
  ||(JLY_MODEL==_3_WD_SD_QY)||(JLY_MODEL==_6_WD_SD_QY_YL01_FS_FX))
  #define SHR1000_ENABLE      1
#else
  #define SHR1000_ENABLE      0
#endif

#if ((JLY_MODEL==_2_WDHTU_SDHTU)||(JLY_MODEL==_2_WDHIH6130_SDHIH6130))
  #define HTU_ENABLE                1
#else
  #define HTU_ENABLE                0
#endif


//..............................................................................
#define _A_E   1
#define _A_D   0

//工作状态
#define WORK_STATE_STOP          0X00//停机中
#define WORK_STATE_RECORDING     0X01//记录中
//显示刷新模式
#define LCD_IMMEDIATE            0x01//即时显示
#define LCD_SYNCHRONOUS          0x02//同步显示
//启动方式
#define START_MODE_RIGHT         0X01//立即启动
#define START_MODE_LATER         0X02//定时启动
#define START_MODE_HAND          0X03//手动启动
//停止方式
#define STOP_MODE_FULL           0X01//记满停止
#define STOP_MODE_LATER          0X02//定时停止
#define STOP_MODE_FIFO           0X03//先进先出
#define STOP_MODE_HAND           0x04//手动停止
//停机原因
#define OFF_NOT                  0X00//未停止
#define OFF_RECORD_FULL          0X01//记满停止
#define OFF_LATER_TIME_STOP      0X02//定时停止
#define OFF_HAND                 0X03//手动停止
#define OFF_PC                   0X04//PC停机
#define OFF_LATER_TIME_START     0X05//定时启动,还未启动时
#define OFF_BSQ_GPRS_HAND_STOP   0X06//GPRS变送器手动停机,记录停止，打印，上传都停止
#define OFF_GPRS_RECORD_STOP     0x07//记录、打印、上传都停止，进入数显模式
#define OFF_RF_U0U1              0x08//RF U0-U1进入透传

//LCD状态提示-----------------------------------------------------------------
#define MCU_RESET                0//复位
#define HAND_START_SAMPLE        1//手动启动
#define LCD_WAKE                 2//唤醒屏幕
#define LOOK_MAX_MIN             3//查看极值和均值
#define PRINTING                 4//打印中
#define PRINT_NEW_CLR            5//打印缓冲清空
#define WIFI_RELOAD              6//Wifi reload
#define CO2_SET_0                7//co2调零  X 420
#define U1TOPC                   8//U1切换到PC, 可以连电脑
#define RF_SET                   9//UO<->U1,可以直接设置无线模块参数

#define ALARM_ON                 10//非汉字，报警开
#define ALARM_OFF                11//非汉字，报警关


#define HANG_NOT_SHOW            99//LCD显示时，该行数值不显示
#define CH_X_NOT_SHOW            80//80+X 对应X通道号不显示
#define UNIT_NOT_SHOW            100//该行不显示单位

//.....................cmd....................................................
#define READ_LINK                0x01
#define SET_STOP                 0x02
#define SET_RE_START             0x03
#define SET_ADDRESS              0x04
#define READ_REAL_VALUE          0x05
#define SET_STATEB               0x06
#define READ_ADC                 0x07
#define SET_CURVE                0x08
#define READ_CURVE               0x09
#define SET_ALARM                0x0A
#define SET_MODEL_SERIAL_NUM     0x0B
#define SET_PHONE                0x0C
#define READ_PHONE               0x0D

#define READ_DOWNLOAD_INFOR      0x11
#define READ_DOWNLOAD_BAG        0x12

#define SET_ADC_MODE             0x13
#define FACTORY_SETTING          0x14
#define SET_INV_TIME             0x15
#define READ_INV_TIME            0x16
#define READ_BATT_TIME           0x17

#define SET_CONTROL              0x18
#define READ_CONTROL             0x19

#define SET_RTC                  0x1a
#define SET_INTERNATIONAL_PHONE  0x1b
#define READ_INTERNATIONAL_PHONE 0x1c

#define READ_BATTERY_CAPACITY    0x1d
#define SET_GPRS_INFO            0x1e
#define READ_GPRS_INFO           0x1f

#define SET_SD_SHIFT_EN          0x20
#define READ_SD_SHIFT_EN         0x21

#define SET_PRINT_XX             0x22
#define READ_PRINT_XX            0x23

#define SET_SMS_TITLE            0x24
#define READ_SMS_TITLE           0x25

#define SET_GPRS_YY              0x26
#define READ_GPRS_YY             0x27

#define SET_SMS_TIME             0x2A
#define READ_SMS_TIME            0x2B

#define CMD_RESET                0x2e//复位
#define READ_MULTI_INFOR         0x2f//读多机接收机、中继器，接收的连接数和连接的地址

#define CMD_SET_FREQ             0x30//设置频率
#define CMD_RF_PAIR              0x31//配对，同步 SN 到无线卡片


#define GSM_MONTIOR_SET          0x91

//..............................................................................
#define STYLE_BYTE_2             0x02//存储格式2字节，1位小数
#define SENIOR_NULL              0xfffe
#define HAND_STOP                0xfffd

//.............................................................
//CH_TYPE
#define _T_T      0x01
#define _T_H      0x02
#define _T_YL     0x03
#define _T_TRSF   0x04
#define _T_DY     0x05
#define _T_DL     0x06
#define _T_GL     0x07
#define _T_GZ     0x08
#define _T_FS     0x09
#define _T_FX     0x0a
#define _T_CO2    0x0b
#define _T_QY     0x0c
//以下类型，logger2支持，logger8不支持,link时处理, 显示为QY
#define _T_O2     0x0d
#define _T_CS     0x0e
#define _T_SW     0x0f
//以下类型，logger2不支持
#define _T_YALI   0x10
#define _T_PH     0x11
#define _T_GHYXFS 0x12
#define _T_SDU    0x14//深度
#define _T_ZWFS   0x15//紫外辐射
#define _T_VOC    0x16
#define _T_PM25   0x17
#define _T_CH2O   0x18
#define _T_DOOR   0x19
#define _T_SMOKE  0x1a
#define _T_TYFS   0x1b
#define _T_ZF     0x1c

//CH_UNIT
#define _U_OC     0X01
#define _U_RH     0X02
#define _U_mm     0X03
#define _U_bf     0x04
#define _U_v      0x05
#define _U_a      0x06
#define _U_w      0x07
#define _U_klx    0x08
#define _U_m_s    0x09
#define _U_o      0X0a
#define _U_ppm    0x0b
#define _U_pa     0x0c
//以下单位，logger2支持，logger8不支持
#define _U_ci     0x0e
#define _U_none   0x0f//空
//以下单位, logger2>不支持，会报错，上位机需改进。link的时候，以下全发送为_U_none
#define _U_x10ppm 0x10
#define _U_x10kpa 0x11
#define _U_kpa    0x12
#define _U_kw     0x13
#define _U_x10mv  0x14
#define _U_ph     0x15
#define _U_x10umol 0x16
#define _U_x10mm   0x17
#define _U_m      0x18
#define _U_lx     0x19
#define _U_UV     0x1a
#define _U_ug_m3  0x1b
#define _U_x10o   0x1c
#define _U_mg_m3  0x1d
#define _U_x10ug_m3 0x1e
#define _U_x10w_m2  0x1f
#define _U_g_m3     0x20

//CH_STYLE
#define _S_0      0x01//整数
#define _S_1      0x02//1位小数
#define _S_2      0x03//2位小数

  //CH_REF
#define _R_AVCC   0X00
#define _R_2V5    0X02

#if  REF_EX_EN==1//外部基准使能
  #define _R_EX     0X03
#else
  #define _R_EX     _R_2V5
#endif


#define SMS_ALARM  1
#define SMS_LOOK   0
//..............................................................................
typedef unsigned char u8;//最大值255
typedef unsigned char uchar;
typedef volatile unsigned char vu8;
typedef unsigned int  u16;//最大值65535
typedef unsigned int  uint;
typedef volatile unsigned int vu16;
typedef unsigned long u32;//最大值 4294967295
typedef volatile unsigned long vu32;
typedef unsigned long ulong;
typedef unsigned long long ulonglong;//最大值 18446744073709551615

#define NOP   _NOP()
#define nop() _NOP()

#define BCD_TO_D10(BCD)      (BCD/16)*10+BCD%16
#define D10_TO_BCD(D10)      (D10/10)*16+D10%10
#define U8_TO_U16(H,L)       ((u16)0x100*H+L)
#define U8_TO_U32(H,B,A,L)   ((u32)0x1000000*H+(u32)0x10000*B+(u32)0x100*A+L)


#define  MIN(x,y) (((x)<(y))?(x):(y)) 
#define  MAX(x,y) (((x)>(y))?(x):(y)) 


#define DAY_SS      86400
#define HOUR_SS     3600
#define MINUTE_SS   60


//..............................................................................
#if EX_DOG_ENABLE==1
#define DOG_S              P5OUT^=BIT6
#else
#define DOG_S              NOP
#endif

#if WDT_ENABLE==1
#define WDT_STOP           WDTCTL=WDTPW+WDTHOLD
#define WDT_START          WDTCTL=WDT_ARST_1000
#define WDT_CLR            WDT_START;DOG_S;
#else
#define WDT_STOP           WDTCTL=WDTPW+WDTHOLD//zz
#define WDT_START          NOP
#define WDT_CLR            DOG_S;
#endif
//..............................................................................
#define U1_RXD_EN         UC1IE |= UCA1RXIE;
#define U1_RXD_UN         UC1IE &=~ UCA1RXIE;

//======================================================================================
//P5.3,P3.3,P2.2,P1.1与风速风向不能同时使用----------------------------------------------
#if FS_FX_ENABLE==1
#define SG_ON              NOP//风速风向占用了P5.3,DCDC改为P1.3 SG_ON
#define SG_OFF             NOP
#define LED12V_AL_ON       NOP
#define LED12V_AL_OFF      NOP
#define DCDC_ON            P1DIR|=BIT3;P1OUT|=BIT3
#define DCDC_OFF           P1DIR|=BIT3;P1OUT&=~BIT3
#define WIRSLESS_POW_ON    NOP
#define WIRSLESS_POW_OFF   NOP
#define VPT_CTL_ON         NOP
#define VPT_CTL_OFF        NOP
#define RY1_ON             NOP
#define RY1_OFF            NOP
#define RY2_ON             NOP
#define RY2_OFF            NOP
#elif LED_WORK_ENABLE==1//Led灯电源
#define DCDC_ON            NOP
#define DCDC_OFF           NOP
#define LED12V_AL_ON       NOP
#define LED12V_AL_OFF      NOP
#define LED1_ON            P5DIR|=BIT3;P5OUT|=BIT3
#define LED1_OFF           P5DIR|=BIT3;P5OUT&=~BIT3
#define VPT_CTL_ON         P3DIR|=BIT3;P3OUT|=BIT3
#define VPT_CTL_OFF        P3DIR|=BIT3;P3OUT&=~BIT3
#define RY1_ON             NOP
#define RY1_OFF            NOP
#define RY2_ON             NOP
#define RY2_OFF            NOP
//RY_CONTROL_ENABLE控制电机，5v提供给继电器
//RY_GSM_ENABLEGSM模块控制继电器，一直用外电
#elif ((RY_CONTROL_ENABLE==1)||(RY_GSM_ENABLE==1)||(RY_ALARM_EN==1))//继电器电源
#define DCDC_ON            NOP
#define DCDC_OFF           NOP
#define LED12V_AL_ON       NOP
#define LED12V_AL_OFF      NOP
#define RY_POW_ON          P5DIR|=BIT3;P5OUT|=BIT3
#define RY_POW_OFF         P5DIR|=BIT3;P5OUT&=~BIT3
#define VPT_CTL_ON         P3DIR|=BIT3;P3OUT|=BIT3
#define VPT_CTL_OFF        P3DIR|=BIT3;P3OUT&=~BIT3
#define RY1_ON             P2DIR|=BIT2;P2OUT|=BIT2
#define RY1_OFF            P2DIR|=BIT2;P2OUT&=~BIT2
#define RY2_ON             P1DIR|=BIT1;P1OUT|=BIT1
#define RY2_OFF            P1DIR|=BIT1;P1OUT&=~BIT1
#elif ((WIRELESS_ENABLE==1)&&(OW_ENABLE==1))//无线模块电源
#define DCDC_ON            NOP
#define DCDC_OFF           NOP
#define LED12V_AL_ON       NOP
#define LED12V_AL_OFF      NOP
#define WIRSLESS_POW_ON    P5DIR|=BIT3;P5OUT|=BIT3
#define WIRSLESS_POW_OFF   P5DIR|=BIT3;P5OUT&=~BIT3
#define VPT_CTL_ON         NOP
#define VPT_CTL_OFF        NOP
#define RY1_ON             NOP
#define RY1_OFF            NOP
#define RY2_ON             NOP
#define RY2_OFF            NOP
#elif WIRELESS_ENABLE==1//无线模块电源
#define DCDC_ON            NOP
#define DCDC_OFF           NOP
#define LED12V_AL_ON       NOP
#define LED12V_AL_OFF      NOP
#define WIRSLESS_POW_ON    P5DIR|=BIT3;P5OUT|=BIT3
#define WIRSLESS_POW_OFF   P5DIR|=BIT3;P5OUT&=~BIT3
#define VPT_CTL_ON         P3DIR|=BIT3;P3OUT|=BIT3
#define VPT_CTL_OFF        P3DIR|=BIT3;P3OUT&=~BIT3
#define RY1_ON             NOP
#define RY1_OFF            NOP
#define RY2_ON             NOP
#define RY2_OFF            NOP
#elif OW_ENABLE==1//18B20  5.2,5.1,5.0,1.0,1.1,2.2,3.3,5.3
#define LED12V_AL_ON       NOP
#define LED12V_AL_OFF      NOP
#define DCDC_ON            NOP
#define DCDC_OFF           NOP
#define WIRSLESS_POW_ON    NOP
#define WIRSLESS_POW_OFF   NOP
#define VPT_CTL_ON         NOP
#define VPT_CTL_OFF        NOP
#define RY1_ON             NOP
#define RY1_OFF            NOP
#define RY2_ON             NOP
#define RY2_OFF            NOP
#elif PHONE_ALARM_ENABLE==1//电话报警，触发信号为DC5V
#define PHONE_ALARM_ON     P5DIR|=BIT3;P5OUT|=BIT3
#define PHONE_ALARM_OFF    P5DIR|=BIT3;P5OUT&=~BIT3
#define LED12V_AL_ON       NOP
#define LED12V_AL_OFF      NOP
#define DCDC_ON            NOP
#define DCDC_OFF           NOP
#define WIRSLESS_POW_ON    NOP
#define WIRSLESS_POW_OFF   NOP
#define VPT_CTL_ON         P3DIR|=BIT3;P3OUT|=BIT3
#define VPT_CTL_OFF        P3DIR|=BIT3;P3OUT&=~BIT3
#define RY1_ON             NOP
#define RY1_OFF            NOP
#define RY2_ON             NOP
#define RY2_OFF            NOP
#elif HTU_ENABLE==1
#define LED12V_AL_ON       NOP
#define LED12V_AL_OFF      NOP
#define DCDC_ON            P5DIR|=BIT3;P5OUT|=BIT3
#define DCDC_OFF           P5DIR|=BIT3;P5OUT&=~BIT3
#define VPT_CTL_ON         NOP
#define VPT_CTL_OFF        NOP
#define RY1_ON             NOP
#define RY1_OFF            NOP
#define RY2_ON             NOP
#define RY2_OFF            NOP

#elif K_MAX31855_EN==1

#define LED12V_AL_ON       NOP
#define LED12V_AL_OFF      NOP
#define DCDC_ON            NOP
#define DCDC_OFF           NOP
#define VPT_CTL_ON         NOP
#define VPT_CTL_OFF        NOP
#define RY1_ON             NOP
#define RY1_OFF            NOP
#define RY2_ON             NOP
#define RY2_OFF            NOP

#else                         

#define LED12V_AL_ON       NOP
#define LED12V_AL_OFF      NOP
#define DCDC_ON            P5DIR|=BIT3;P5OUT|=BIT3
#define DCDC_OFF           P5DIR|=BIT3;P5OUT&=~BIT3
#define VPT_CTL_ON         P3DIR|=BIT3;P3OUT|=BIT3
#define VPT_CTL_OFF        P3DIR|=BIT3;P3OUT&=~BIT3
#define RY1_ON             NOP
#define RY1_OFF            NOP
#define RY2_ON             NOP
#define RY2_OFF            NOP

#endif

#if ALARM_LED_EN==1
#define LED_OFF            NOP
#define LED_ON             NOP
#define LED_ALARM_OFF      P3DIR|=BIT0;P3OUT&=~BIT0
#define LED_ALARM_ON       P3DIR|=BIT0;P3OUT|=BIT0
#else
#define LED_OFF            P3DIR|=BIT0;P3OUT&=~BIT0
#define LED_ON             P3DIR|=BIT0;P3OUT|=BIT0
#define LED_ALARM_OFF      NOP
#define LED_ALARM_ON       NOP
#endif

/*
#if SIM800C_EN==1
   #undef LED_ON
  #define LED_ON           NOP
#endif
*/

#if SMS_BATONLY_ENABLE==1
      #define GSMPOW_ON        P1DIR|=BIT2;P1OUT|=BIT2//GSM电源开关脚
      #define GSMPOW_OFF       P1DIR|=BIT2;P1OUT&=~BIT2
      #define BELL_ON          NOP
      #define BELL_OFF         NOP
#else
      #define BELL_ON          P1DIR|=BIT2;P1OUT|=BIT2;LED_ALARM_ON;
      #define BELL_OFF         P1DIR|=BIT2;P1OUT&=~BIT2;LED_ALARM_OFF
#endif


#if FS_FX_ENABLE==0//没有风速风向时，启用声光报警
#define SG_ON              P1DIR|=BIT3;P1OUT|=BIT3
#define SG_OFF             P1DIR|=BIT3;P1OUT&=~BIT3
#endif

#define NTC_ON             P5DIR|=BIT4;P5OUT&=~BIT4;
#define NTC_OFF            P5DIR|=BIT4;P5OUT|=BIT4;

#define VT_CTL_ON          NTC_ON;VPT_CTL_ON;DCDC_ON;
#define VT_CTL_OFF         NTC_OFF;VPT_CTL_OFF;DCDC_OFF;

#if DCV_ALL_ON==1//VDC持续供电
#undef  VT_CTL_OFF
#define VT_CTL_OFF         NTC_OFF;VPT_CTL_OFF;//去掉DCDC_OFF,5vDC一直开着
#endif


#define VPP_CTL_ON         P5DIR|=BIT5;P5OUT|=BIT5
#define VPP_CTL_OFF        P5DIR|=BIT5;P5OUT&=~BIT5

#define UART_U0_TXD_SET    P3SEL|=BIT4;P3DIR|=BIT4
#define UART_U0_TXD_CLR    delay_us(2000);P3SEL&=~BIT4;P3DIR&=~BIT4


#if ((RJ45_ENABLE==1)||(WIFI_ENABLE==1))
#define EM310RST_L         NOP
#define EM310RST_H         NOP
#define IGT_L              NOP
#define IGT_H              NOP
#define NLINK_BIT          BIT1
#define NLINK_PIN          P3IN
#define NREADY_BIT         BIT2
#define NREADY_PIN         P3IN
#define SET_NLINK_IN       P3SEL&=~NLINK_BIT;P3DIR&=~NLINK_BIT;
#define SET_NREADY_IN      P3SEL&=~NREADY_BIT;P3DIR&=~NREADY_BIT;
#define DC_3V3_ON          P4DIR|=BIT0;P4OUT|=BIT0//电源控制
#define DC_3V3_OFF         NOP//P4DIR|=BIT0;P4OUT&=~BIT0
#else
#define EM310RST_L         P3DIR|=BIT1;P3OUT&=~BIT1
#define EM310RST_H         P3DIR|=BIT1;P3OUT|=BIT1
#define IGT_L              P3DIR|=BIT2;P3OUT&=~BIT2
#define IGT_H              P3DIR|=BIT2;P3OUT|=BIT2
#define SET_NLINK_IN       NOP
#define SET_NREADY_IN      NOP

#endif


#define KEY_1_BIT         BIT4
#define SET_KEY_1_INT     P1SEL&=~KEY_1_BIT;P1DIR&=~KEY_1_BIT;P1IES|=KEY_1_BIT;P1IFG&=~KEY_1_BIT;P1IE|=KEY_1_BIT;
#define CLR_KEY_1_INT     P1IE&=~KEY_1_BIT;

#define KEY_2_BIT         BIT5
#define SET_KEY_2_INT     P1SEL&=~KEY_2_BIT;P1DIR&=~KEY_2_BIT;P1IES|=KEY_2_BIT;P1IFG&=~KEY_2_BIT;P1IE|=KEY_2_BIT;
#define CLR_KEY_2_INT     P1IE&=~KEY_2_BIT;

#define KEY_3_BIT         BIT6
#define SET_KEY_3_INT     P1SEL&=~KEY_3_BIT;P1DIR&=~KEY_3_BIT;P1IES|=KEY_3_BIT;P1IFG&=~KEY_3_BIT;P1IE|=KEY_3_BIT;
#define CLR_KEY_3_INT     P1IE&=~KEY_3_BIT;

#define KEY_4_BIT         BIT7
#define SET_KEY_4_INT     P1SEL&=~KEY_4_BIT;P1DIR&=~KEY_4_BIT;P1IES|=KEY_4_BIT;P1IFG&=~KEY_4_BIT;P1IE|=KEY_4_BIT;
#define CLR_KEY_4_INT     P1IE&=~KEY_4_BIT;

#define KEY_PIN           P1IN
#define KEY_IFG           P1IFG

#define YL1_BIT           BIT0
#define YL1_PIN           P2IN
#define YL1_PDIR          P2DIR
#define YL1_IFG           P2IFG
#define SET_YL1_INT       P2SEL&=~YL1_BIT;P2REN&=~YL1_BIT;P2DIR&=~YL1_BIT;P2IES&=~YL1_BIT;P2IFG&=~YL1_BIT;P2IE|=YL1_BIT
#define CLR_YL1_INT       P2IE&=~YL1_BIT

#define DOOR_INI          P2SEL&=~YL1_BIT;P2REN&=~YL1_BIT;P2DIR&=~YL1_BIT;//输入模式

#define POW_BIT           BIT1
#define POW_SET_IN        P2SEL&=~POW_BIT;P2DIR&=~POW_BIT
#define POW_PIN           P2IN

#define U0_TXD_SET        P3SEL|=BIT4;P3DIR|=BIT4;
#define U0_TXD_CLR        delay_us(2000);P3SEL&=~BIT4;P3DIR&=~BIT4

#if USB_ENABLE==1
#define UART_USB_TXD_SET   P3SEL|=BIT6;P3DIR|=BIT6;
#define UART_USB_TXD_CLR   delay_us(2000);P3SEL&=~BIT6;P3DIR&=~BIT6
#else
#define UART_USB_TXD_SET   NOP
#define UART_USB_TXD_CLR   NOP
#endif

#if RS232_ENABLE==1
#define SHDN_H             P4DIR|=BIT1;P4OUT|=BIT1
#define SHDN_L             delay_us(1000);P4DIR|=BIT1;P4OUT&=~BIT1
#else
#define SHDN_H             NOP
#define SHDN_L             NOP
#endif

#if RS485_ENABLE==1
#define RS485_CTL_H        P4DIR|=BIT2;P4OUT|=BIT2;delay_us(1000);
#define RS485_CTL_L        delay_us(5000);delay_us(5000);P4DIR|=BIT2;P4OUT&=~BIT2
#else
#define RS485_CTL_H        NOP
#define RS485_CTL_L        NOP
#endif

#if DCDC_ALL_EN==1
#undef  POWER_TIME_ENABLE
#define POWER_TIME_ENABLE  0
#undef  SD_ENABLE
#define SD_ENABLE          0
#undef  VT_CTL_OFF
#define VT_CTL_OFF         NTC_OFF;VPT_CTL_OFF;
#endif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
#define ADC_PORT_INIT      P6SEL=0xFF;P6DIR=0;
#define ADC_START          ADC12CTL0|=ENC+ADC12SC;//Start conversion
#define ADC_REF_ON         ADC12CTL0|=REFON
#define ADC_REF_OFF        ADC12CTL0&=~REFON
#define ADC_ON             ADC12IFG=0;ADC12CTL0|=ENC+ADC12ON
#define ADC_OFF            ADC12IFG=0;ADC12CTL0&=~(ENC+ADC12ON)


//无线接收传感器  RF_U1_EN
    #define U1_TO_RF   P1DIR|=BIT0+BIT1;P1OUT&=~(BIT0+BIT1);UART_USB_TXD_SET;//USB TXD set
    #define U1_TO_PC   P1DIR|=BIT0+BIT1;P1OUT|=(BIT0+BIT1);UART_USB_TXD_CLR;
    #define RF_IN_REC  P5DIR|=BIT1+BIT2;P5OUT&=~(BIT1+BIT2);//接收状态
    #define RF_IN_SLP  P5DIR|=BIT1+BIT2;P5OUT|=(BIT1+BIT2);//休眠状态
    #define VDC33_ON   P4DIR|=BIT0;P4OUT|=BIT0;//WIFI板子，电源与wifi共电源DC3.3V
    #define VDC33_OFF  P4DIR|=BIT0;P4OUT&=~BIT0;

#if SIM68_EN==1
    #undef  U1_TO_RF
    #undef  U1_TO_PC
    #define U1_TO_RF   P5DIR|=BIT0+BIT1;P5OUT&=~(BIT0+BIT1);UART_USB_TXD_SET;//USB TXD set
    #define U1_TO_PC   P5DIR|=BIT0+BIT1;P5OUT|=(BIT0+BIT1);UART_USB_TXD_CLR;
#endif



#define POWER_CTL_ALL_OFF  I2C_PORT_INIT;I2C2_PORT_INIT;I2C3_PORT_INIT;\
                           VT_CTL_OFF;BELL_OFF;SG_OFF;VPP_CTL_OFF;\
                           RY1_OFF;RY2_OFF;DCDC_OFF;LED_OFF;


//============eeprom====================================================================================
//工作参数=356+(4+PRINT_NEW_CAP*PRINT_CH_BYTE),不能超过总空间(EE_STATE_NUM_MAX).....................
//(1)仪器工作时可变量A1(6)
#define RECORD_NUM_ADDR          ((u16)STATE_FIRST_ADDR+0)//记录条数(4)
#define CURRENT_BUF_PT_ADDR      ((u16)RECORD_NUM_ADDR+4)//页缓冲地址(2)
//(1)仪器工作时可变量A2(17)
#define CURRENT_SAVE_PAGE_ADDR   ((u16)CURRENT_BUF_PT_ADDR+2)//当前存储器记录页号(2)
#define RECORD_OVER_NUM_ADDR     ((u16)CURRENT_SAVE_PAGE_ADDR+2)//记录溢出次数(1)

#define WORK_STATE_ADDR          ((u16)RECORD_OVER_NUM_ADDR+1)//工作状态(1)
#define STOP_CAUSE_ADDR          ((u16)WORK_STATE_ADDR+1)//停机原因(1)
#define START_TIME_ADDR          ((u16)STOP_CAUSE_ADDR+1)//启动时间(6)，年月日时分秒

#define STOP_TIME_ADDR           ((u16)START_TIME_ADDR+6)//停止时间(6)，年月日时分秒
//(2)上位机设置时可变量（84）
#define START_LATER_TIME_ADDR    ((u16)STOP_TIME_ADDR+6)//采样时间(4)//采样时间替换为延时时间
#define RECORD_TIME_ADDR         ((u16)START_LATER_TIME_ADDR+4)//记录时间(4)
#define START_MODE_ADDR          ((u16)RECORD_TIME_ADDR+4)//启动方式(1)，立即启动01H 定时启动02H 手动启动03H
#define STOP_MODE_ADDR           ((u16)START_MODE_ADDR+1)//停止方式(1)
#define LCD_REFRESH_MODE_ADDR    ((u16)STOP_MODE_ADDR+1)//显示刷新模式(1)
#define ADDRESS_ADDR             ((u16)LCD_REFRESH_MODE_ADDR+1)//仪器地址(1)

#define USER_NAME_ADDR           ((u16)ADDRESS_ADDR+1)//用户名(20)
#define TITLE_ADDR               ((u16)USER_NAME_ADDR+20)//标题(20)
#define MODEL_NO_ADDR            ((u16)TITLE_ADDR+20)//设备型号(10)
#define SERIAL_NO_ADDR           ((u16)MODEL_NO_ADDR+10)//设备编号(10)

#define LATER_START_TIME_ADDR    ((u16)SERIAL_NO_ADDR+10)//定时启动时间(6), 年月日时分秒
#define LATER_STOP_TIME_ADDR     ((u16)LATER_START_TIME_ADDR+6)//定时停止时间(6), 年月日时分秒

//..........(6)............................................................
#define STATE_CONFIG_FLAG_ADDR   ((u16)LATER_STOP_TIME_ADDR+6)//(1)EE设置后设置为特定标志
#define HANG_SS_ADDR             ((u16)STATE_CONFIG_FLAG_ADDR+1)//(1)手动模式，标志
#define STATE_LICHENG_ADDR       ((u16)HANG_SS_ADDR+1)//(4)里程数 m
//.........(96).........................................................
#define CH1_MIN_ADDR             ((u16)STATE_LICHENG_ADDR+4)//(2*8=16)通道最小值
#define CH1_MAX_ADDR             ((u16)CH1_MIN_ADDR+16)//(2*8=16)通道最大值
#define CH1_MUM_ADDR             ((u16)CH1_MAX_ADDR+16)//(4*8=32)累加值
#define CH1_YOUXIAONUM_ADDR      ((u16)CH1_MUM_ADDR+32)//(4*8=32)剔除NULL后的有效个数

//手机号码等信息(34)------------------------------------------
#define PHONE_NUM_ADDR           ((u16)CH1_YOUXIAONUM_ADDR+32)//(1)
#define PHONE1_ADDR              ((u16)PHONE_NUM_ADDR+1)//(11)
#define PHONE2_ADDR              ((u16)PHONE1_ADDR+11)//(11)
#define PHONE3_ADDR              ((u16)PHONE2_ADDR+11)//(11)

//有超标过标志(2)，只能通过按钮来清,通道1和通道2
#define ALARMED_ADDR             ((u16)PHONE3_ADDR+11)//(1)
#define ALARMED_CH2_ADDR         ((u16)ALARMED_ADDR+1)//(1) 

//wifi主动模式，手动关机（1）
#define OFF6_KEY_ADDR            ((u16)ALARMED_CH2_ADDR+1)//(1)

//GSM模块按钮开关(1)
#define GSM_KEY_ADDR             ((u16)OFF6_KEY_ADDR+1)//(1)

//SMS主动发送参数(8)
#define INV_TIME_ADDR            ((u16)GSM_KEY_ADDR+1)//(4)
#define INV_POINT_ADDR           ((u16)INV_TIME_ADDR+4)//(4)

//BSQ记录参数(12)
#define PCBSQ_REC_TIME_ADDR      ((u16)INV_POINT_ADDR+4)//(4)
#define PCBSQ_REC_NUM_ADDR       ((u16)PCBSQ_REC_TIME_ADDR+4)//(2)
#define PCBSQ_REC_PT_ADDR        ((u16)PCBSQ_REC_NUM_ADDR+2)//(2)
#define PCBSQ_REC_CAP_ADDR       ((u16)PCBSQ_REC_PT_ADDR+2)//(4) 变送器记录容量可设置

//GPRS参数(45)
#define GPRS_IP_ADDR             ((u16)PCBSQ_REC_CAP_ADDR+4)//4
#define GPRS_PORT_ADDR           ((u16)GPRS_IP_ADDR+4)//2
#define GPRS_TIME_ADDR           ((u16)GPRS_PORT_ADDR+2)//4
#define GPRS_SLEEP_ADDR          ((u16)GPRS_TIME_ADDR+4)//1
#define GPRS_UPTIME_ADDR         ((u16)GPRS_SLEEP_ADDR+1)//1
#define GPRS_PRT_CAP_ADDR        ((u16)GPRS_UPTIME_ADDR+1)//2
#define GPRS_DOMAIN_EN_ADDR      ((u16)GPRS_PRT_CAP_ADDR+2)//1
#define GPRS_DOMAIN_ADDR         ((u16)GPRS_DOMAIN_EN_ADDR+1)//30

//GPRS需发送条数(2)
#define GPRS_DUEOUT_ADDR         ((u16)GPRS_DOMAIN_ADDR+30)//2

//顺丰协议里的序列号(2)
#define GPRS_SF_XLH_ADDR         ((u16)GPRS_DUEOUT_ADDR+2)//2

//需打印条数(2)
#define PRINT_DUEOUT_ADDR         ((u16)GPRS_SF_XLH_ADDR+2)//2

//预留(6)
#define GPRS_YY_ADDR             ((u16)PRINT_DUEOUT_ADDR+2)//6

//LCD08省电模式与正常模式切换(1)
#define LCD08_SHIFT_EN_ADDR      ((u16)GPRS_YY_ADDR+6)//1

//频率(1)
#define RF_FZ_ADDR               ((u16)LCD08_SHIFT_EN_ADDR+1)//1

//实时打印虚线设置(10)
#define PRINT_XX_1_ADDR          ((u16)RF_FZ_ADDR+1)//2
#define PRINT_XX_2_ADDR          ((u16)PRINT_XX_1_ADDR+2)//2
#define PRINT_XX_3_ADDR          ((u16)PRINT_XX_2_ADDR+2)//2
#define PRINT_XX_4_ADDR          ((u16)PRINT_XX_3_ADDR+2)//2
#define PRINT_XX_5_ADDR          ((u16)PRINT_XX_4_ADDR+2)//2

//短信标题(20)
#define SMS_TITLE_ADDR           ((u16)PRINT_XX_5_ADDR+2)//20


#if PRINT_NEW_EN==1
    #if GPRS_TC_EN==0

        // (4+PRINT_NEW_CAP*PRINT_CH_BYTE)
        #define PRINT_NEW_NUM_ADDR       ((u16)SMS_TITLE_ADDR+20)//2
        #define PRINT_NEW_PT_ADDR        ((u16)PRINT_NEW_NUM_ADDR+2)//2
        #define PRINT_CH1_ADDR           ((u16)PRINT_NEW_PT_ADDR+2)//PRINT_NEW_CAP*PRINT_CH_BYTE

    #endif

#endif




//==================================================================================
//==========flash===================================================================
#define CH_CONFIG_FLAG           0xaa
#define STATE_CONFIG_FLAG        0x01
#define CH_MAX_NUM               8
//2+8*63=506<=512
//通道配置标志和通道数(2)--------------------------------------------------------------
#if BOOT_EN==1
  #define CH_CONFIG_FLAG_ADDR    0xFA00//通道配置标志（1）
#else
  #define CH_CONFIG_FLAG_ADDR    0xFC00//通道配置标志（1）
#endif
#define CH_NUM_ADDR              ((u16)CH_CONFIG_FLAG_ADDR+1)//通道数（1）
//通道CH1配置信息(18)---------------------------------------------------------------
#define ONE_CH_BYTES             18
#define CH1_A_L_ADDR             ((u16)CH_NUM_ADDR+1)//报警下限(2) [0.1]
#define CH1_A_H_ADDR             ((u16)CH1_A_L_ADDR+2)//报警上限（2）[2.3]
#define CH1_V_L_ADDR             ((u16)CH1_A_H_ADDR+2)//量程下限（2）[4.5]
#define CH1_V_H_ADDR             ((u16)CH1_V_L_ADDR+2)//量程上限（2）[6.7]
#define CH1_A_EN_ADDR            ((u16)CH1_V_H_ADDR+2)//报警使能（1）[8]
#define CH1_T_ADDR               ((u16)CH1_A_EN_ADDR+1)//类型（1）
#define CH1_U_ADDR               ((u16)CH1_T_ADDR+1)//单位（1）
#define CH1_S_ADDR               ((u16)CH1_U_ADDR+1)//存储格式（1）
#define CH1_R_ADDR               ((u16)CH1_S_ADDR+1)//电压基准（1）
#define CH1_K_L_ADDR             ((u16)CH1_R_ADDR+1)//控制下限（2） [13.14]
#define CH1_K_H_ADDR             ((u16)CH1_K_L_ADDR+2)//控制上限（2）[15.16]
#define CH1_K_E_ADDR             ((u16)CH1_K_H_ADDR+2)//控制使能(1) [17]
//通道曲线地址(45)-----------------------------------------------------------------
#define ONE_CURVE_BYTES          45
#define CURVE1_POINT_ADDR        ((u16)CH1_K_E_ADDR+1)//（30）[18.47]
#define CURVE1_SPACE_ADDR        ((u16)CURVE1_POINT_ADDR+30)//（14）[48.61]
#define CURVE1_POINT_NUM_ADDR    ((u16)CURVE1_SPACE_ADDR+14)//（1）[62]
//--------------------------------------------------------------------------------------
#define ONE_CH_CONFIG_BYTES      (ONE_CH_BYTES+ONE_CURVE_BYTES)//63
//=====================================================================================

//..............................................................................
typedef struct{
  u32 RecordNum;
  u16 CurrentBufPt;
}StructStateA1;//6
extern StructStateA1 StateA1;

typedef struct{
  u16 CurrentSavePage;
  u8 RecordOverNum;
  u8 WorkState;
  u8 StopCause;
  u8 StartTime[6];//BCD
  u8 bb[6];
}StructStateA2;//17
extern StructStateA2 StateA2;

typedef struct{
  u32 StartLaterTime;
  u32 RecordTime;
  u8 StartMode;
  u8 StopMode;
  u8 LcdRefreshMode;
  u8 Address;
  u8 LaterStartTime[6];
  u8 LaterStopTime[6];
}StructStateB;//24
extern StructStateB StateB;

typedef struct{
  u8 UseName[20];
  u8 Title[20];
  u8 Model[10];
  u8 Serial[10];
}StructStateB2;//60
extern StructStateB2 StateB2;


typedef struct{  
  long mum[CH_NUM];//累加和，求平均值用           long 为有符号数
  u32 YouxiaoNum[CH_NUM];//累加时，剔除NULL时的有效个数
  
  u32 E1_MaxMem;//第1片24C512存储最大整数倍空间 vv
  u32 E2_MaxMem;//第2片24C512存储最大整数倍空间，其他片与第2片相同
  
  u32 RecordMaxNum;
  
  #if HUMI_TYPE==_SHT_HUMI
  float Temp;
  float Humi;
  u16 ShtT;
  u16 ShtH;
  #endif
  #if ((SAVE_MEMORY==SAVE_FLASH)||(SAVE_MEMORY==SAVE_SD))
  u16 PageMaxRecordNum;
  u16 PageMaxBytes;
  #endif
  u16 Value[8];
  u32 Asum[8];
  u16 Adc[8];//8个通道同时采样
  u16 real_adc[8];
  vu16 BatV;
  
  #if PRINT_REAL_EN==1
  u16 PrintXB[5];//实时曲线时5个虚线点位
  u16 ValueBc;//前一个点
  u8 HaveBc;//复位或没有记录第一个点时
  u8 PcLinkPt;//正在于PC连接时，不打印
  #elif PRINT_RT_LIST_EN==1
  u8 PcLinkPt;//正在于PC连接时，不打印
  #endif
  
  #if (MIN_MAX_AVG_ENABLE==1)
  u16 min[CH_NUM];
  u16 max[CH_NUM];
  u16 avg[CH_NUM];
  #endif
  
  #if (PRINT_MIN_MAX_EN==1)
  u16 print_min[CH_NUM];
  u16 print_max[CH_NUM];
  long print_sum[CH_NUM];
  #endif
  
  #if DIGITAL_FILTER_EN==1
  u16 FilterAd[CH_NUM][FILET_NUM];//8路
  u8 FiletPt[CH_NUM];//数组指针
  u8 FiletNt[CH_NUM];//次数
  #endif
  
  
  #if ((LBS_LAC_EN==1)||(LBS_JWD_EN==1))
  u16 LBSpt;
  #endif
  
  
  #if ((LBS_JWD_EN==1)||(GPS_MOUSE_EN==1))
  u32 LongiDec;//经度小数部分
  u32 LatiDec;//纬度小数部分
  u8 LongiInt;//经度整数部分
  u8 LatiInt;//纬度整数部分
  #endif
  
  #if GPS_MOUSE_EN==1
  
  float bcLon;//前一个值
  float bcLat;

  u16 Vkmh;//湿度
  u8 SatelliteN;//卫星数

  u16 GpsOutPt;
  u16 AwakeWait;
  u8 GpsSlping:1;
  
  u8 GpsRecWait;//5秒接收一次
  u16 GpsBcWait;//bc赋值间隔70s

  
  u8 SeeBDSing:1;//监测定位输出的数据
  u8 StaticPt;
  #endif
  
  #if ((SEN_UART_EN==1)||(SEN_U0_PM25_EN==1))
  #define SEN_REC_TIME    4
  u16 sen_vv;
  u8 sen_Pt;
  #endif
  
  u8 FuhaoBit;
  u8 RecordBytes;
}StructStateC;//54
extern StructStateC StateC;


typedef struct{
  u8  RxBuf[U0MAX];
  vu16 RecLen;
  
  u16 RecPt;
  u8  AddCrc;
  vu8 FlagHeadOk:1;
  vu8 FlagFinish:1;
}StructUart_0;
extern StructUart_0 Uart_0;


typedef struct{
  u8  RxBuf[U1MAX];
  u16 RecLen;
  
  u16 RecPt;
  u8  AddCrc;
  vu8 FlagHeadOk:1;
  vu8 FlagFinish:1;
}StructUart_1;//277
extern StructUart_1 Uart_1;




#if GSM_ENABLE==1
typedef struct{
  vu16 SmsUniLen;
  u8 SmsRxPhone[15];
  u8 SmsRecUni[160];
  u8 GsmXh;//GSM信号强度
#define READ_CSQ_DOG_TIME 5
  u8 ReadCsqDog;
}StructGsm;
extern StructGsm Gsm;
#endif

typedef struct{
  u32 CurrentNum;
  u32 DownloadNum;//总条数
  #if ((SAVE_MEMORY==SAVE_FLASH)||(SAVE_MEMORY==SAVE_SD))
  u16 CurrentSavePage;
  u16 PageAddr;
  #elif SAVE_MEMORY==SAVE_EEPROM//3.3
  //u16 BufPt;
  #endif  
  u32 Current32Pt;//当前缓冲地址
  u16 BagMaxRecordNum;//包最大条数
  u16 BagNum;//总包数
  u16 BagPt;//包序号
  u16 BagDataBytes;//包数据长度
  u16 BagRecordNum;//包条数 
  u8 LastBagPt;
  u8 TimeOut;//下载数据超时
  u8 Downloading:1;//下载数据中
}StructDownload;//22
extern StructDownload Download;

typedef struct{
  u8 AlarmedCh[2];//曾经超标过标志，只适用于2通道
  u8 AlarmB;//超标报警标志
  u8 AlarmR;//超标记录标志
  u8 StartSample;  
  vu8 SampPt;//采样状态：1，开始AD采样，2，AD采样结束，0，计算物理值结束
  #define START_SAMPLE_TIME 2
  //状态标志位 
  vu8 Loop:1;
  vu8 KeyLcdLoop:1;
  u8 BellShan:1;
  u8 HandOff:1;
  u8 SeeComing:1;
  u8 U0U1ing:1;//U0RX->U1TX; U1RX->U0TX
  u8 PowIn:1;
  u8 GsmTestSending:1;
  u8 RstFirstSample:1;
  u8 HandJustStart:1;//手动刚刚启动标志
  u8 AdcMd:1;
  u8 Ry1ed:1;
  u8 Ry2ed:1;
  vu8 Modbus:1;//modbus格式接收
  vu8 Gps:1;
  
  #if LCD08_SD_SHIFT_EN==1
  u8 LCD08_Sd_en:1;
  #endif
  
  #if ((GPRS_TC_EN==1)||(WIFI_ENABLE==1))
  u8 ID[5];//SN 十六进制
  u16 XlhPt;//包序列号，发送成功后，序号从0开始到65535，一直循环，什么时候主动清0？
  u8 TCing;//透传状态下,0非透传，1透传后还未发送数据，2第一次数据发送成功但仍有数据发送，3全部数据发送成功
  u8 TC_Type;//是发送数据包01还是EE包等判断
  u8 TC_Tp;//临时包类型
  u8 TC_WaitPt;//等待时间0-60，发送一条数据后，如果服务器不应答，重复1次后断开，60后再连
  u8 TC_LinkTryPt;//连接进入透传重试次数
  u8 TC_DataTryPt;//透传后，数据发送重试次数
  //u8 TC_HandOn;//开机标记
  //u8 TC_HandOff;//关机标记
  
 
  #endif
  
}StructFlag;
extern StructFlag Flag;

#if RF_REC_EN==1
typedef struct{
  u16 value;
  u8 type;
  u8 unit;
  u8 style;
}StructRfCh;
#endif


typedef struct{
  vu32 RecordPt;
  
#if ((RF_U1_EN==1)&&(RF_REC_EN==1))
  u8 PCpt;//zz AD曲线调整时，U1->RF,超时后自动回到 U1->PC
  
#endif
  
#if  RF_MULTI_MNJ==1
  u32 rtc;
  u16 cc;
  u16 data;
#endif
  
#if  (JLY_MODEL==_1_PM25_PWM_1000)
  u32 pwm_A;
  u32 pwm_L;
  u16 pwm_V;
  u8 pwm_pt;
  
#endif
  
  
  #if RF_U1_EN==1
  u8 U1toPC;
  #endif
  
  #if ((RF_REC_EN==1)||(RF_RP_EN==1))
  u8 KeyApt;
  #endif

  #if RF_REC_EN==1
  
  StructRfCh RfData[RF_SEN_MAX][2];
  u16 RfTimeout[RF_SEN_MAX];
  u16 Spt;
  u16 RecRpPt;
  u8 RfChN[RF_SEN_MAX];
  u8 Bat[RF_SEN_MAX];//电池电量
  u8 SampPt;
  u8 Sn[10];
  unsigned short SnCRC16;
  #endif
  
  #if RF_RP_EN==1
  u16 HasTimeout[RF_RP_MAX];//每路有无传感器数据，便于统计传感器数
  u16 ScanPt;//扫描连接数周期
  u8 LinkN;//连接数
  #endif
  
  #if ((RF_REC_EN==1)||(RF_RP_EN==1)||(RF_TXRX_470M_EN==1))
  u8 RpOff;
  u8 Fz;
  u8 Xz;
  u8 FlagBB;//卡片回来的指令
  u8 Foo:1;
  u8 FlagRF16:1;
  #endif
  
  u16 A1Pt;
  u16 RainPt;
  u16 FsPt;
  
  #if ((ALARM_TIME_ENABLE==1)||(ALARM_BELL_TIME_EN==1))
  u16 AlarmTimePt;
  #endif
  
  #if ALARM_POINT_ENABLE==1
  u16 AlarmPointPt;
  u16 ValueBc;
  #endif
  
  u8 RealSamplePt;

  #if HUMI_TYPE==_SHT_HUMI
  u8 ShtPt;
  #endif

  u8 BattLPt;
  
  u8 key_mm_pt;
  u8 min_max_pt;

  #if SD_ENABLE==1
  u8 sd_pt;//正常模式切换到省电模式
  #endif
  
  #if WIRELESS_ENABLE==1
  u8 WiPt;
  #endif
  
  vu8 AdcPt;
  u8 RtcPt;
  u8 KeyPt;
  u8 LcdPt;
  u8 LcdShowPt;//翻屏时间
  
  u8 GsmPt;//Gsm启动时，变量计时
  u8 CpinPt;
  u8 RstErrPt;
  u8 IniErrPt;

  #if GSM_ENABLE==1
  #define STEP_TIME 1
  #define INI_LONG_DOG_TIME                  120//SIM卡登陆网络耗时 GTM900C--140S   TC35I--50S

  #define ATE       1
  
  #if GSM_EM310_EN==1
    #define CPIN    ATE+1
  #else
    #define CFUN    ATE+1
    #define CPIN    CFUN+1
  #endif

  #define CMGF     CPIN+1
  
#if LBS_LAC_EN==1
  #define CENG     CMGF+1
  #define CREG     CENG+1
  #define LBS0     CREG+1  
  #define CSQ      LBS0+1
  
#elif LBS_JWD_EN==1
  #define CREG        CMGF+1
  #define L_CIPMODE   CREG+1
  #define ZIPIND      L_CIPMODE+1
  #define ZIPCFG      ZIPIND+1
  #define ZIPCALL     ZIPCFG+1
  #define GTPOS1      ZIPCALL+1
  #define GTPOS2      GTPOS1+1
  #define GTPOS0      GTPOS2+1
  #define CSQ         GTPOS0+1

  
#else
  #define CREG     CMGF+1
  #define CSQ      CREG+1
#endif
  
  
#if GPRS_ENABLE==1
  
      #if SIM800C_EN==1
  
          #define TC_CIPSHUT    CSQ+1
          #define TC_CIPMUX     TC_CIPSHUT+1
          #define TC_CIPMODE    TC_CIPMUX+1
          #define TC_CIPCCFG    TC_CIPMODE+1
          #define TC_COPS       TC_CIPCCFG+1
          #define TC_CSTT       TC_COPS+1
          #define TC_CIICR      TC_CSTT+1
          #define TC_CIFSR      TC_CIICR+1
          #define ATW           TC_CIFSR+1
  
      #else

  
           #if GPRS_TC_EN==1
              u8 Linking:1;
  
              #define CGATT      CSQ+1
              #define COPS       CGATT+1
              #define IOMODE     COPS+1
              #define SICS1      IOMODE+1
              #define SICS2      SICS1+1
              #define SISS1      SICS2+1
              #define SISS2      SISS1+1
              #define SISSIP     SISS2+1            
              #define SISO       SISSIP+1

              #define IPCFL1     SISO+1
              #define IPCFL2     IPCFL1+1
  
              #define ATW        IPCFL2+1
            #else
  
                #define ATW        CSQ+1
  
            #endif
      #endif

  
#else
  #define CLIP     CSQ+1//来电号码提示

  #if GSM_TXT_EN==1//英文格式
    #define CNMI    CLIP+1
  #else  
  
    #if GSM_MG323_EN==1
      #define CMGR    CLIP+1
      #define CMGD    CMGR+1
      #define CNMI    CMGD+1
    #else
      #define CNMI    CLIP+1
    #endif
  
  #endif
  
  #define ATW        CNMI+1
#endif

  #define INI_END 99//不能为0
  vu8 IniIngStep;
  u8  IniBcStep;
  vu8 IniLongDog;
  vu8 IniStepDog;
  vu8 IniStartTime;
  
  #define SMS_SEND_DOG_TIME 15
  #define SMS_T_ERR_CT      2//发送失败后，重发次数
  #define SMSLEN            1
  #define SMSPDU            2
  #define SMS_END           0
  vu8 SmsIngStep;
  u8  SmsBcStep;
  vu8 SmsSendStepDog;
  vu8 SmsSendLongDog;
  vu8 SmsTime;
  
  vu8 SmsTErrCt;
  vu8 SmsDueOut;//SMS待发
  #endif
  
  
  #if ((GPRS_ENABLE==1)||(BSQ_REC_AA_EN==1))
  u16 GprsThisRec16Num;
  u16 GprsThisRecPt;
  u16 GprsRealN;//实际发送条数，温湿度数据剔除开关机标记后的数据
  u16 GprsThisDueOut;//需发送的数据点数
  u16 GprsDueOut;//需发送的数据点数
  u8 SendFailPt;//服务器接收失败多次后，模块重启
  #endif

  #if GPRS_ENABLE==1
  u16 PrtCap;//打印条数
  u16 GprsSendTime;//上传间隔
  u8 Gprsing;//上传标志
  u8 GprsWaitSpt;//等待服务器返回 300.10
  
  u8 PtDay;
  u16 Tmp;
  u16 PrintDueout;
  u16 PrintThisDueout;
  u8 PrintFG:1;
  u8 ExitClosePt;//退出透传，关闭连接
  u8 LinkFailPt;//连接不上次数多次后，重连
  //u8 SendFailPt;//服务器接收失败多次后，模块重启
  u8 ToOff:1;//关机，如果在透传时，先退出透传，再关机
  

    //非透传数据传输模式
    #if SIM800C_EN==1
  

            #define CIP1SHUT   1
            #define CIPSTART   CIP1SHUT+1
            #define CIPSEND    CIPSTART+1
            #define SENDDAT    CIPSEND+1
            #define S_LISING   SENDDAT+1
  
            #define GPRS_BEGIN  CIPSTART//zz
            #define GPRS_END    0

    #else
  
          #if GPRS_TC_EN==0
              //MG323每次连接时，如果上不已经断开连接，则连不上，必须重走一遍(MG301 不需要)
               
              u8 FgSISW:1;//因为MG301, SISO连接时，会返回2次OK或SISW，故通过这个变量滤掉一次
              
              #define CGATT      1
              #define COPS       CGATT+1
              #define IOMODE     COPS+1
              #define SICS1      IOMODE+1
              #define SICS2      SICS1+1
              #define SISS1      SICS2+1
              #define SISS2      SISS1+1
              #define SISSIP     SISS2+1            
              #define SISO       SISSIP+1
              
              #define SISW       SISO+1
              #define SENDDAT    SISW+1
              #define MG_LISING   SENDDAT+1      

              #define GPRS_BEGIN  CGATT  
              #define GPRS_END   0
              
           #endif
              
    #endif
    
    #define GPRS_DOG_TIME                    80
    
    u8 GprsIngStep;
    u8 GprsBcStep;
    u8 GprsStepDog;
    u8 GprsLongDog;
    u8 GprsStart;
    u8 ChinaMobile;
  
    #define GPRS_T_ERR_CT      1//发送失败后，重发次数
    u8 GprsTErrCt;
    //u16 GprsDueOut;//需发送的数据点数
    u16 GprsTime;

    u8 OnOffBJ;//开关机标记
    //u16 GprsRealN;//实际发送条数，温湿度数据剔除开关机标记后的数据
    //u16 GprsThisDueOut;//需发送的数据点数
    //u16 GprsThisRec16Num;
    //u16 GprsThisRecPt;

    //#if GPRS_POW_EN==1
    u8 GprsPowDueOut;
    u8 GprsPowRam[33];//17+2*8=33 【RTC+电量+预留+n*数值】
    //#endif

    u8 GprsRstErrPt;//发送失败次数
    vu8 GprsSleep;//省电模式
    
    
    #define UTC_DOG_TIME   50//自动对时超时时间  
    u8 UtcDog;
    u8 UtcEn;
    #define UTC_ERR_TIME  2
    u8 UtcErr;//失败后，有重试2次
    
    
  #endif

  u8 ChPt;
  u8 PowPt;
  u8 LcdxPt;
  

  
#if WIFI_ENABLE==1
  u8 ReloadPt;
  u16 WifiPt;
#endif
  
  #define SEN_NULL_CT  5
  
#if HTU_ENABLE==1
  u8 wd_pt;
  u8 sht_pt;
#endif
  
#if  K_MAX31855_EN==1
  u8 k_pt[CH_NUM];
#endif
  
#if PT_MAX31865_EN==1
  u8 t_pt[CH_NUM];
  int t_temp[CH_NUM];
#endif  
  
  
#if OW_ENABLE==1
  u8 ow_pt[CH_NUM];
#endif
  
  
#define LED_TIME 10
  u8 LedPt;
  
#define ERR_NUM   3
  u8 ErrCt;//采样错误重复次数
  
  u8 GzNoRe:1;//光照传感器响应标志
  u8 GzBHNoRe:1;//第2个光照传感器响应标志
  u8 RtcShan:1;
  
  //u8 SeniorPow:1;//小板电源控制
  //u8 RfPow:1;//无线传感电源控制

  #if GSM_MG323_EN==1
  u8 BcCMGR:1;
  #endif
  
  u8 PowSmsFg:1;
  
#if WIFI_ENABLE==1
  u8 Fg60FF:1;//关机
#endif
  
  
#if RF_MULTI_EN==1
  u8 RecRpBag:1;
  u16 pcpt;//pc读时清0
  u8 test:1;//测试用 
#endif

}StructPt;
extern StructPt Pt;

typedef struct SMS{
  
  #if SMS_INV_ENABLE==1
  u32 InvTimePt;//短信间隔发送时间
  u32 InvPointPt;//发送时间点(间隔时间大于1天时才有效)
  u16 InvRecMax;//最大记录条数
  u16 InvRecNum;//缓冲数据条数
  u16 InvRecPt;//当前记录指针
  vu16 InvOneBytes;//一条记录字节数
  u16 InvRtcPt;
  #endif
  
  
  u16 LAC;//基站信息
  u16 CID;
  
  #define GSM_ON_ERR_TIME     40//30s一次掉线检测
  u16 OnErrPt;
  
  u16 IntervalPt;
  u16 AlarmDueOut;
  
  #if SMS_INV_ENABLE==1
  #define SMS_DAYPOT_MAX    4
  #define ONEPOT_BYTES      (4+2*CH_NUM) 
  #define DAYPOT_MAX        (ONEPOT_BYTES*SMS_DAYPOT_MAX)
  u8 SmsPotBuf[DAYPOT_MAX];//临时存放缓冲，一天最大4个点，共4*(4+2*CH_NUM)字节
  #endif

  u8 PowDueOut;
  u8 TestDueOut;
  u8 BattDueOut;
  u8 BattLowFg;
  
  #if SMS_IN_AL_EN==1
  u16 SmsInALPt;
  #endif

#define RING_CT  2
  u8 RingCt;
  
  vu8 GsmKeyShut;//按钮开关使能标志
  
  u8 InvWaitPt;
  u8 GsmOff:1;//关机标志
  
  u8 SmsErr:1;
  u8 SmsRe:1;
  u8 GsmIsEm310:1;
  
}StrcutSms;//6
extern StrcutSms Sms;

typedef struct RTC{
  vu32 SB;
  u32 SS;
  u8 Year;
  u8 Month;
  u8 Day;
  u8 Hour;
  u8 Minute;
  u8 Second;
}StrcutRtc;//14
extern StrcutRtc Rtc;
#if KEY_SET_ENABLE==1
extern StrcutRtc RtcTemp;
#endif

typedef struct{
  u32 EndX;
  u32 BeginX;
  u16 BagKuaQuPt;//跨区这包的包号
  u16 XhBuf[8][50];//8路序号,每个序号最多50个点,,序号最大为65535条记录
  u16 DianXh;//打印点时间序号，先设为u16格式，不能超过65535
  u16 MinMaxBuf[CH_NUM*2];//0,1通道1最小最大值，2,3通道2最小最大值，4,5通道1，6,7通道2
  
  u16 NewNum;
  u16 NewPt;
  
  u8 XhPt[8];
  u8 FgKuaPt;//跨区的2个分区，哪个只有一个数据
  u8 FgKuaQu:1;//跨区标志
  u8 FgLastBagOne:1;//最后一包只有一个数据标志
}StructPrint;
extern StructPrint Print;

typedef struct{
    #define KEY_STEP_1  1
    #define KEY_STEP_2  2
    #define KEY_STEP_3  3
    #define KEY_STEP_4  4
      
    #define KEY_TIME    3//按键按下后，4秒内屏蔽采样
    u8 KeyTimePt;
    vu8 Step;//按键
  
    #define DEC_TIME   16//zz
    u8 DecT;
    u8 Ct;//第几个key
    
    #if KEY_SET_ENABLE==1
    u16 AlarmExt[4];//0min 0max 1min 1max
    #define KEY_DOG_TIME      300//5分钟
    u16 KeyDog;
    u8 AddrPt;
    u8 SetModePt;

    u8 Kt;
    u8 Mt;
    u8 FlagX1:1;
    u8 FlagS1:1;
  #endif
}StructKey;
extern StructKey Key;

typedef struct{
  u32 RecCap;//记录容量
  u32 RecTime;
  u16 Rec16Num;
  u16 RecPt;
  u8 PCwaitTT;
  u8 PrintTT;
}StructPcBsq;
extern StructPcBsq PcBsq;



//以下未定义全局变量--------------------------------------------------------
typedef struct{
  u16 Point[15];
  u8 Space[14];
  u8 PointNum;
}StructCurve;//45

typedef struct{
  u16 alarm_L;
  u16 alarm_H;
  u16 value_L;
  u16 value_H;
  u8 alarm_E;
  u8 type;
  u8 unit;
  u8 style;
  u8 ref;
}struct_channel;



//-----------------------------------------------------------------------------
#include "_logger.h"
#include "_main.h"
#include "_adc.h"
#include "_rtc.h"
#include "_i2c_ee.h"
#include "_i2c_rtc.h"
#include "_i2c_shr1000.h"
#include "_i2c_bh1750.h"
#include "_uart_pc.h"
#include "_lcd.h"
#include "_gsm.h"
#include "_key.h"
#include "_led.h"
#include "_fsfx.h"
#include "_print.h"
#include "_modbus.h"
#include "_wireless.h"
#include "_ow.h"
#include "math.h"
#include "_i2c_htu.h"
#include "_spi_max31855.h"
#include "_spi_max31865.h"
#include "_gps.h"

//=================================================================================
#endif
